# Makefile.in generated by automake 1.16.5 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2021 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# This Makefile.am is derived from a Makefile that was in the
# softfp library sources, and is subject to the same liberal license.
# This adaptation to use autoconf/automake (and not to try too hard to
# get highest speed) is by A C Norman, February 2016

#=============================================================================
#
# This Makefile is part of the SoftFloat IEEE Floating-Point Arithmetic
# Package, Release 3a, by John R. Hauser.
#
# Copyright 2011, 2012, 2013, 2014 The Regents of the University of
# California.  All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
#  1. Redistributions of source code must retain the above copyright notice,
#     this list of conditions, and the following disclaimer.
#
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions, and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
#  3. Neither the name of the University nor the names of its contributors
#     may be used to endorse or promote products derived from this software
#     without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS "AS IS", AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE, ARE
# DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#=============================================================================


am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/softfp
pkgincludedir = $(includedir)/softfp
pkglibdir = $(libdir)/softfp
pkglibexecdir = $(libexecdir)/softfp
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-cygwin
host_triplet = x86_64-pc-cygwin
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \
	$(am__configure_deps) $(include_HEADERS) $(am__DIST_COMMON)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"
LIBRARIES = $(lib_LIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libsoftfloat_a_AR = $(AR) $(ARFLAGS)
libsoftfloat_a_LIBADD =
am__objects_1 = s_eq128.$(OBJEXT) s_le128.$(OBJEXT) s_lt128.$(OBJEXT) \
	s_shortShiftLeft128.$(OBJEXT) s_shortShiftRight128.$(OBJEXT) \
	s_shortShiftRightJam64.$(OBJEXT) \
	s_shortShiftRightJam64Extra.$(OBJEXT) \
	s_shortShiftRightJam128.$(OBJEXT) \
	s_shortShiftRightJam128Extra.$(OBJEXT) \
	s_shiftRightJam32.$(OBJEXT) s_shiftRightJam64.$(OBJEXT) \
	s_shiftRightJam64Extra.$(OBJEXT) s_shiftRightJam128.$(OBJEXT) \
	s_shiftRightJam128Extra.$(OBJEXT) \
	s_shiftRightJam256M.$(OBJEXT) s_countLeadingZeros8.$(OBJEXT) \
	s_countLeadingZeros32.$(OBJEXT) \
	s_countLeadingZeros64.$(OBJEXT) s_add128.$(OBJEXT) \
	s_add256M.$(OBJEXT) s_sub128.$(OBJEXT) s_sub256M.$(OBJEXT) \
	s_mul64ByShifted32To128.$(OBJEXT) s_mul64To128.$(OBJEXT) \
	s_mul128By32.$(OBJEXT) s_mul128To256M.$(OBJEXT) \
	s_approxRecip32_1.$(OBJEXT) s_approxRecipSqrt32_1.$(OBJEXT)
am__objects_2 = softfloat_raiseFlags.$(OBJEXT) \
	s_f32UIToCommonNaN.$(OBJEXT) s_commonNaNToF32UI.$(OBJEXT) \
	s_propagateNaNF32UI.$(OBJEXT) s_f64UIToCommonNaN.$(OBJEXT) \
	s_commonNaNToF64UI.$(OBJEXT) s_propagateNaNF64UI.$(OBJEXT) \
	extF80M_isSignalingNaN.$(OBJEXT) \
	s_extF80UIToCommonNaN.$(OBJEXT) \
	s_commonNaNToExtF80UI.$(OBJEXT) \
	s_propagateNaNExtF80UI.$(OBJEXT) \
	f128M_isSignalingNaN.$(OBJEXT) s_f128UIToCommonNaN.$(OBJEXT) \
	s_commonNaNToF128UI.$(OBJEXT) s_propagateNaNF128UI.$(OBJEXT)
am__objects_3 = s_roundPackToUI32.$(OBJEXT) \
	s_roundPackToUI64.$(OBJEXT) s_roundPackToI32.$(OBJEXT) \
	s_roundPackToI64.$(OBJEXT) s_normSubnormalF32Sig.$(OBJEXT) \
	s_roundPackToF32.$(OBJEXT) s_normRoundPackToF32.$(OBJEXT) \
	s_addMagsF32.$(OBJEXT) s_subMagsF32.$(OBJEXT) \
	s_mulAddF32.$(OBJEXT) s_normSubnormalF64Sig.$(OBJEXT) \
	s_roundPackToF64.$(OBJEXT) s_normRoundPackToF64.$(OBJEXT) \
	s_addMagsF64.$(OBJEXT) s_subMagsF64.$(OBJEXT) \
	s_mulAddF64.$(OBJEXT) s_normSubnormalExtF80Sig.$(OBJEXT) \
	s_roundPackToExtF80.$(OBJEXT) \
	s_normRoundPackToExtF80.$(OBJEXT) s_addMagsExtF80.$(OBJEXT) \
	s_subMagsExtF80.$(OBJEXT) s_normSubnormalF128Sig.$(OBJEXT) \
	s_roundPackToF128.$(OBJEXT) s_normRoundPackToF128.$(OBJEXT) \
	s_addMagsF128.$(OBJEXT) s_subMagsF128.$(OBJEXT) \
	s_mulAddF128.$(OBJEXT) softfloat_state.$(OBJEXT) \
	ui32_to_f32.$(OBJEXT) ui32_to_f64.$(OBJEXT) \
	ui32_to_extF80.$(OBJEXT) ui32_to_extF80M.$(OBJEXT) \
	ui32_to_f128.$(OBJEXT) ui32_to_f128M.$(OBJEXT) \
	ui64_to_f32.$(OBJEXT) ui64_to_f64.$(OBJEXT) \
	ui64_to_extF80.$(OBJEXT) ui64_to_extF80M.$(OBJEXT) \
	ui64_to_f128.$(OBJEXT) ui64_to_f128M.$(OBJEXT) \
	i32_to_f32.$(OBJEXT) i32_to_f64.$(OBJEXT) \
	i32_to_extF80.$(OBJEXT) i32_to_extF80M.$(OBJEXT) \
	i32_to_f128.$(OBJEXT) i32_to_f128M.$(OBJEXT) \
	i64_to_f32.$(OBJEXT) i64_to_f64.$(OBJEXT) \
	i64_to_extF80.$(OBJEXT) i64_to_extF80M.$(OBJEXT) \
	i64_to_f128.$(OBJEXT) i64_to_f128M.$(OBJEXT) \
	f32_to_ui32.$(OBJEXT) f32_to_ui64.$(OBJEXT) \
	f32_to_i32.$(OBJEXT) f32_to_i64.$(OBJEXT) \
	f32_to_ui32_r_minMag.$(OBJEXT) f32_to_ui64_r_minMag.$(OBJEXT) \
	f32_to_i32_r_minMag.$(OBJEXT) f32_to_i64_r_minMag.$(OBJEXT) \
	f32_to_f64.$(OBJEXT) f32_to_extF80.$(OBJEXT) \
	f32_to_extF80M.$(OBJEXT) f32_to_f128.$(OBJEXT) \
	f32_to_f128M.$(OBJEXT) f32_roundToInt.$(OBJEXT) \
	f32_add.$(OBJEXT) f32_sub.$(OBJEXT) f32_mul.$(OBJEXT) \
	f32_mulAdd.$(OBJEXT) f32_div.$(OBJEXT) f32_rem.$(OBJEXT) \
	f32_sqrt.$(OBJEXT) f32_eq.$(OBJEXT) f32_le.$(OBJEXT) \
	f32_lt.$(OBJEXT) f32_eq_signaling.$(OBJEXT) \
	f32_le_quiet.$(OBJEXT) f32_lt_quiet.$(OBJEXT) \
	f32_isSignalingNaN.$(OBJEXT) f64_to_ui32.$(OBJEXT) \
	f64_to_ui64.$(OBJEXT) f64_to_i32.$(OBJEXT) \
	f64_to_i64.$(OBJEXT) f64_to_ui32_r_minMag.$(OBJEXT) \
	f64_to_ui64_r_minMag.$(OBJEXT) f64_to_i32_r_minMag.$(OBJEXT) \
	f64_to_i64_r_minMag.$(OBJEXT) f64_to_f32.$(OBJEXT) \
	f64_to_extF80.$(OBJEXT) f64_to_extF80M.$(OBJEXT) \
	f64_to_f128.$(OBJEXT) f64_to_f128M.$(OBJEXT) \
	f64_roundToInt.$(OBJEXT) f64_add.$(OBJEXT) f64_sub.$(OBJEXT) \
	f64_mul.$(OBJEXT) f64_mulAdd.$(OBJEXT) f64_div.$(OBJEXT) \
	f64_rem.$(OBJEXT) f64_sqrt.$(OBJEXT) f64_eq.$(OBJEXT) \
	f64_le.$(OBJEXT) f64_lt.$(OBJEXT) f64_eq_signaling.$(OBJEXT) \
	f64_le_quiet.$(OBJEXT) f64_lt_quiet.$(OBJEXT) \
	f64_isSignalingNaN.$(OBJEXT) extF80_to_ui32.$(OBJEXT) \
	extF80_to_ui64.$(OBJEXT) extF80_to_i32.$(OBJEXT) \
	extF80_to_i64.$(OBJEXT) extF80_to_ui32_r_minMag.$(OBJEXT) \
	extF80_to_ui64_r_minMag.$(OBJEXT) \
	extF80_to_i32_r_minMag.$(OBJEXT) \
	extF80_to_i64_r_minMag.$(OBJEXT) extF80_to_f32.$(OBJEXT) \
	extF80_to_f64.$(OBJEXT) extF80_to_f128.$(OBJEXT) \
	extF80_roundToInt.$(OBJEXT) extF80_add.$(OBJEXT) \
	extF80_sub.$(OBJEXT) extF80_mul.$(OBJEXT) extF80_div.$(OBJEXT) \
	extF80_rem.$(OBJEXT) extF80_sqrt.$(OBJEXT) extF80_eq.$(OBJEXT) \
	extF80_le.$(OBJEXT) extF80_lt.$(OBJEXT) \
	extF80_eq_signaling.$(OBJEXT) extF80_le_quiet.$(OBJEXT) \
	extF80_lt_quiet.$(OBJEXT) extF80_isSignalingNaN.$(OBJEXT) \
	extF80M_to_ui32.$(OBJEXT) extF80M_to_ui64.$(OBJEXT) \
	extF80M_to_i32.$(OBJEXT) extF80M_to_i64.$(OBJEXT) \
	extF80M_to_ui32_r_minMag.$(OBJEXT) \
	extF80M_to_ui64_r_minMag.$(OBJEXT) \
	extF80M_to_i32_r_minMag.$(OBJEXT) \
	extF80M_to_i64_r_minMag.$(OBJEXT) extF80M_to_f32.$(OBJEXT) \
	extF80M_to_f64.$(OBJEXT) extF80M_to_f128M.$(OBJEXT) \
	extF80M_roundToInt.$(OBJEXT) extF80M_add.$(OBJEXT) \
	extF80M_sub.$(OBJEXT) extF80M_mul.$(OBJEXT) \
	extF80M_div.$(OBJEXT) extF80M_rem.$(OBJEXT) \
	extF80M_sqrt.$(OBJEXT) extF80M_eq.$(OBJEXT) \
	extF80M_le.$(OBJEXT) extF80M_lt.$(OBJEXT) \
	extF80M_eq_signaling.$(OBJEXT) extF80M_le_quiet.$(OBJEXT) \
	extF80M_lt_quiet.$(OBJEXT) f128_to_ui32.$(OBJEXT) \
	f128_to_ui64.$(OBJEXT) f128_to_i32.$(OBJEXT) \
	f128_to_i64.$(OBJEXT) f128_to_ui32_r_minMag.$(OBJEXT) \
	f128_to_ui64_r_minMag.$(OBJEXT) f128_to_i32_r_minMag.$(OBJEXT) \
	f128_to_i64_r_minMag.$(OBJEXT) f128_to_f32.$(OBJEXT) \
	f128_to_extF80.$(OBJEXT) f128_to_f64.$(OBJEXT) \
	f128_roundToInt.$(OBJEXT) f128_add.$(OBJEXT) \
	f128_sub.$(OBJEXT) f128_mul.$(OBJEXT) f128_mulAdd.$(OBJEXT) \
	f128_div.$(OBJEXT) f128_rem.$(OBJEXT) f128_sqrt.$(OBJEXT) \
	f128_eq.$(OBJEXT) f128_le.$(OBJEXT) f128_lt.$(OBJEXT) \
	f128_eq_signaling.$(OBJEXT) f128_le_quiet.$(OBJEXT) \
	f128_lt_quiet.$(OBJEXT) f128_isSignalingNaN.$(OBJEXT) \
	f128M_to_ui32.$(OBJEXT) f128M_to_ui64.$(OBJEXT) \
	f128M_to_i32.$(OBJEXT) f128M_to_i64.$(OBJEXT) \
	f128M_to_ui32_r_minMag.$(OBJEXT) \
	f128M_to_ui64_r_minMag.$(OBJEXT) \
	f128M_to_i32_r_minMag.$(OBJEXT) \
	f128M_to_i64_r_minMag.$(OBJEXT) f128M_to_f32.$(OBJEXT) \
	f128M_to_extF80M.$(OBJEXT) f128M_to_f64.$(OBJEXT) \
	f128M_roundToInt.$(OBJEXT) f128M_add.$(OBJEXT) \
	f128M_sub.$(OBJEXT) f128M_mul.$(OBJEXT) f128M_mulAdd.$(OBJEXT) \
	f128M_div.$(OBJEXT) f128M_rem.$(OBJEXT) f128M_sqrt.$(OBJEXT) \
	f128M_eq.$(OBJEXT) f128M_le.$(OBJEXT) f128M_lt.$(OBJEXT) \
	f128M_eq_signaling.$(OBJEXT) f128M_le_quiet.$(OBJEXT) \
	f128M_lt_quiet.$(OBJEXT)
am_libsoftfloat_a_OBJECTS = $(am__objects_1) $(am__objects_2) \
	$(am__objects_3)
libsoftfloat_a_OBJECTS = $(am_libsoftfloat_a_OBJECTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(srcdir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/extF80M_add.Po \
	./$(DEPDIR)/extF80M_div.Po ./$(DEPDIR)/extF80M_eq.Po \
	./$(DEPDIR)/extF80M_eq_signaling.Po \
	./$(DEPDIR)/extF80M_isSignalingNaN.Po \
	./$(DEPDIR)/extF80M_le.Po ./$(DEPDIR)/extF80M_le_quiet.Po \
	./$(DEPDIR)/extF80M_lt.Po ./$(DEPDIR)/extF80M_lt_quiet.Po \
	./$(DEPDIR)/extF80M_mul.Po ./$(DEPDIR)/extF80M_rem.Po \
	./$(DEPDIR)/extF80M_roundToInt.Po ./$(DEPDIR)/extF80M_sqrt.Po \
	./$(DEPDIR)/extF80M_sub.Po ./$(DEPDIR)/extF80M_to_f128M.Po \
	./$(DEPDIR)/extF80M_to_f32.Po ./$(DEPDIR)/extF80M_to_f64.Po \
	./$(DEPDIR)/extF80M_to_i32.Po \
	./$(DEPDIR)/extF80M_to_i32_r_minMag.Po \
	./$(DEPDIR)/extF80M_to_i64.Po \
	./$(DEPDIR)/extF80M_to_i64_r_minMag.Po \
	./$(DEPDIR)/extF80M_to_ui32.Po \
	./$(DEPDIR)/extF80M_to_ui32_r_minMag.Po \
	./$(DEPDIR)/extF80M_to_ui64.Po \
	./$(DEPDIR)/extF80M_to_ui64_r_minMag.Po \
	./$(DEPDIR)/extF80_add.Po ./$(DEPDIR)/extF80_div.Po \
	./$(DEPDIR)/extF80_eq.Po ./$(DEPDIR)/extF80_eq_signaling.Po \
	./$(DEPDIR)/extF80_isSignalingNaN.Po ./$(DEPDIR)/extF80_le.Po \
	./$(DEPDIR)/extF80_le_quiet.Po ./$(DEPDIR)/extF80_lt.Po \
	./$(DEPDIR)/extF80_lt_quiet.Po ./$(DEPDIR)/extF80_mul.Po \
	./$(DEPDIR)/extF80_rem.Po ./$(DEPDIR)/extF80_roundToInt.Po \
	./$(DEPDIR)/extF80_sqrt.Po ./$(DEPDIR)/extF80_sub.Po \
	./$(DEPDIR)/extF80_to_f128.Po ./$(DEPDIR)/extF80_to_f32.Po \
	./$(DEPDIR)/extF80_to_f64.Po ./$(DEPDIR)/extF80_to_i32.Po \
	./$(DEPDIR)/extF80_to_i32_r_minMag.Po \
	./$(DEPDIR)/extF80_to_i64.Po \
	./$(DEPDIR)/extF80_to_i64_r_minMag.Po \
	./$(DEPDIR)/extF80_to_ui32.Po \
	./$(DEPDIR)/extF80_to_ui32_r_minMag.Po \
	./$(DEPDIR)/extF80_to_ui64.Po \
	./$(DEPDIR)/extF80_to_ui64_r_minMag.Po \
	./$(DEPDIR)/f128M_add.Po ./$(DEPDIR)/f128M_div.Po \
	./$(DEPDIR)/f128M_eq.Po ./$(DEPDIR)/f128M_eq_signaling.Po \
	./$(DEPDIR)/f128M_isSignalingNaN.Po ./$(DEPDIR)/f128M_le.Po \
	./$(DEPDIR)/f128M_le_quiet.Po ./$(DEPDIR)/f128M_lt.Po \
	./$(DEPDIR)/f128M_lt_quiet.Po ./$(DEPDIR)/f128M_mul.Po \
	./$(DEPDIR)/f128M_mulAdd.Po ./$(DEPDIR)/f128M_rem.Po \
	./$(DEPDIR)/f128M_roundToInt.Po ./$(DEPDIR)/f128M_sqrt.Po \
	./$(DEPDIR)/f128M_sub.Po ./$(DEPDIR)/f128M_to_extF80M.Po \
	./$(DEPDIR)/f128M_to_f32.Po ./$(DEPDIR)/f128M_to_f64.Po \
	./$(DEPDIR)/f128M_to_i32.Po \
	./$(DEPDIR)/f128M_to_i32_r_minMag.Po \
	./$(DEPDIR)/f128M_to_i64.Po \
	./$(DEPDIR)/f128M_to_i64_r_minMag.Po \
	./$(DEPDIR)/f128M_to_ui32.Po \
	./$(DEPDIR)/f128M_to_ui32_r_minMag.Po \
	./$(DEPDIR)/f128M_to_ui64.Po \
	./$(DEPDIR)/f128M_to_ui64_r_minMag.Po ./$(DEPDIR)/f128_add.Po \
	./$(DEPDIR)/f128_div.Po ./$(DEPDIR)/f128_eq.Po \
	./$(DEPDIR)/f128_eq_signaling.Po \
	./$(DEPDIR)/f128_isSignalingNaN.Po ./$(DEPDIR)/f128_le.Po \
	./$(DEPDIR)/f128_le_quiet.Po ./$(DEPDIR)/f128_lt.Po \
	./$(DEPDIR)/f128_lt_quiet.Po ./$(DEPDIR)/f128_mul.Po \
	./$(DEPDIR)/f128_mulAdd.Po ./$(DEPDIR)/f128_rem.Po \
	./$(DEPDIR)/f128_roundToInt.Po ./$(DEPDIR)/f128_sqrt.Po \
	./$(DEPDIR)/f128_sub.Po ./$(DEPDIR)/f128_to_extF80.Po \
	./$(DEPDIR)/f128_to_f32.Po ./$(DEPDIR)/f128_to_f64.Po \
	./$(DEPDIR)/f128_to_i32.Po ./$(DEPDIR)/f128_to_i32_r_minMag.Po \
	./$(DEPDIR)/f128_to_i64.Po ./$(DEPDIR)/f128_to_i64_r_minMag.Po \
	./$(DEPDIR)/f128_to_ui32.Po \
	./$(DEPDIR)/f128_to_ui32_r_minMag.Po \
	./$(DEPDIR)/f128_to_ui64.Po \
	./$(DEPDIR)/f128_to_ui64_r_minMag.Po ./$(DEPDIR)/f32_add.Po \
	./$(DEPDIR)/f32_div.Po ./$(DEPDIR)/f32_eq.Po \
	./$(DEPDIR)/f32_eq_signaling.Po \
	./$(DEPDIR)/f32_isSignalingNaN.Po ./$(DEPDIR)/f32_le.Po \
	./$(DEPDIR)/f32_le_quiet.Po ./$(DEPDIR)/f32_lt.Po \
	./$(DEPDIR)/f32_lt_quiet.Po ./$(DEPDIR)/f32_mul.Po \
	./$(DEPDIR)/f32_mulAdd.Po ./$(DEPDIR)/f32_rem.Po \
	./$(DEPDIR)/f32_roundToInt.Po ./$(DEPDIR)/f32_sqrt.Po \
	./$(DEPDIR)/f32_sub.Po ./$(DEPDIR)/f32_to_extF80.Po \
	./$(DEPDIR)/f32_to_extF80M.Po ./$(DEPDIR)/f32_to_f128.Po \
	./$(DEPDIR)/f32_to_f128M.Po ./$(DEPDIR)/f32_to_f64.Po \
	./$(DEPDIR)/f32_to_i32.Po ./$(DEPDIR)/f32_to_i32_r_minMag.Po \
	./$(DEPDIR)/f32_to_i64.Po ./$(DEPDIR)/f32_to_i64_r_minMag.Po \
	./$(DEPDIR)/f32_to_ui32.Po ./$(DEPDIR)/f32_to_ui32_r_minMag.Po \
	./$(DEPDIR)/f32_to_ui64.Po ./$(DEPDIR)/f32_to_ui64_r_minMag.Po \
	./$(DEPDIR)/f64_add.Po ./$(DEPDIR)/f64_div.Po \
	./$(DEPDIR)/f64_eq.Po ./$(DEPDIR)/f64_eq_signaling.Po \
	./$(DEPDIR)/f64_isSignalingNaN.Po ./$(DEPDIR)/f64_le.Po \
	./$(DEPDIR)/f64_le_quiet.Po ./$(DEPDIR)/f64_lt.Po \
	./$(DEPDIR)/f64_lt_quiet.Po ./$(DEPDIR)/f64_mul.Po \
	./$(DEPDIR)/f64_mulAdd.Po ./$(DEPDIR)/f64_rem.Po \
	./$(DEPDIR)/f64_roundToInt.Po ./$(DEPDIR)/f64_sqrt.Po \
	./$(DEPDIR)/f64_sub.Po ./$(DEPDIR)/f64_to_extF80.Po \
	./$(DEPDIR)/f64_to_extF80M.Po ./$(DEPDIR)/f64_to_f128.Po \
	./$(DEPDIR)/f64_to_f128M.Po ./$(DEPDIR)/f64_to_f32.Po \
	./$(DEPDIR)/f64_to_i32.Po ./$(DEPDIR)/f64_to_i32_r_minMag.Po \
	./$(DEPDIR)/f64_to_i64.Po ./$(DEPDIR)/f64_to_i64_r_minMag.Po \
	./$(DEPDIR)/f64_to_ui32.Po ./$(DEPDIR)/f64_to_ui32_r_minMag.Po \
	./$(DEPDIR)/f64_to_ui64.Po ./$(DEPDIR)/f64_to_ui64_r_minMag.Po \
	./$(DEPDIR)/i32_to_extF80.Po ./$(DEPDIR)/i32_to_extF80M.Po \
	./$(DEPDIR)/i32_to_f128.Po ./$(DEPDIR)/i32_to_f128M.Po \
	./$(DEPDIR)/i32_to_f32.Po ./$(DEPDIR)/i32_to_f64.Po \
	./$(DEPDIR)/i64_to_extF80.Po ./$(DEPDIR)/i64_to_extF80M.Po \
	./$(DEPDIR)/i64_to_f128.Po ./$(DEPDIR)/i64_to_f128M.Po \
	./$(DEPDIR)/i64_to_f32.Po ./$(DEPDIR)/i64_to_f64.Po \
	./$(DEPDIR)/s_add128.Po ./$(DEPDIR)/s_add256M.Po \
	./$(DEPDIR)/s_addMagsExtF80.Po ./$(DEPDIR)/s_addMagsF128.Po \
	./$(DEPDIR)/s_addMagsF32.Po ./$(DEPDIR)/s_addMagsF64.Po \
	./$(DEPDIR)/s_approxRecip32_1.Po \
	./$(DEPDIR)/s_approxRecipSqrt32_1.Po \
	./$(DEPDIR)/s_commonNaNToExtF80UI.Po \
	./$(DEPDIR)/s_commonNaNToF128UI.Po \
	./$(DEPDIR)/s_commonNaNToF32UI.Po \
	./$(DEPDIR)/s_commonNaNToF64UI.Po \
	./$(DEPDIR)/s_countLeadingZeros32.Po \
	./$(DEPDIR)/s_countLeadingZeros64.Po \
	./$(DEPDIR)/s_countLeadingZeros8.Po ./$(DEPDIR)/s_eq128.Po \
	./$(DEPDIR)/s_extF80UIToCommonNaN.Po \
	./$(DEPDIR)/s_f128UIToCommonNaN.Po \
	./$(DEPDIR)/s_f32UIToCommonNaN.Po \
	./$(DEPDIR)/s_f64UIToCommonNaN.Po ./$(DEPDIR)/s_le128.Po \
	./$(DEPDIR)/s_lt128.Po ./$(DEPDIR)/s_mul128By32.Po \
	./$(DEPDIR)/s_mul128To256M.Po \
	./$(DEPDIR)/s_mul64ByShifted32To128.Po \
	./$(DEPDIR)/s_mul64To128.Po ./$(DEPDIR)/s_mulAddF128.Po \
	./$(DEPDIR)/s_mulAddF32.Po ./$(DEPDIR)/s_mulAddF64.Po \
	./$(DEPDIR)/s_normRoundPackToExtF80.Po \
	./$(DEPDIR)/s_normRoundPackToF128.Po \
	./$(DEPDIR)/s_normRoundPackToF32.Po \
	./$(DEPDIR)/s_normRoundPackToF64.Po \
	./$(DEPDIR)/s_normSubnormalExtF80Sig.Po \
	./$(DEPDIR)/s_normSubnormalF128Sig.Po \
	./$(DEPDIR)/s_normSubnormalF32Sig.Po \
	./$(DEPDIR)/s_normSubnormalF64Sig.Po \
	./$(DEPDIR)/s_propagateNaNExtF80UI.Po \
	./$(DEPDIR)/s_propagateNaNF128UI.Po \
	./$(DEPDIR)/s_propagateNaNF32UI.Po \
	./$(DEPDIR)/s_propagateNaNF64UI.Po \
	./$(DEPDIR)/s_roundPackToExtF80.Po \
	./$(DEPDIR)/s_roundPackToF128.Po \
	./$(DEPDIR)/s_roundPackToF32.Po \
	./$(DEPDIR)/s_roundPackToF64.Po \
	./$(DEPDIR)/s_roundPackToI32.Po \
	./$(DEPDIR)/s_roundPackToI64.Po \
	./$(DEPDIR)/s_roundPackToUI32.Po \
	./$(DEPDIR)/s_roundPackToUI64.Po \
	./$(DEPDIR)/s_shiftRightJam128.Po \
	./$(DEPDIR)/s_shiftRightJam128Extra.Po \
	./$(DEPDIR)/s_shiftRightJam256M.Po \
	./$(DEPDIR)/s_shiftRightJam32.Po \
	./$(DEPDIR)/s_shiftRightJam64.Po \
	./$(DEPDIR)/s_shiftRightJam64Extra.Po \
	./$(DEPDIR)/s_shortShiftLeft128.Po \
	./$(DEPDIR)/s_shortShiftRight128.Po \
	./$(DEPDIR)/s_shortShiftRightJam128.Po \
	./$(DEPDIR)/s_shortShiftRightJam128Extra.Po \
	./$(DEPDIR)/s_shortShiftRightJam64.Po \
	./$(DEPDIR)/s_shortShiftRightJam64Extra.Po \
	./$(DEPDIR)/s_sub128.Po ./$(DEPDIR)/s_sub256M.Po \
	./$(DEPDIR)/s_subMagsExtF80.Po ./$(DEPDIR)/s_subMagsF128.Po \
	./$(DEPDIR)/s_subMagsF32.Po ./$(DEPDIR)/s_subMagsF64.Po \
	./$(DEPDIR)/softfloat_raiseFlags.Po \
	./$(DEPDIR)/softfloat_state.Po ./$(DEPDIR)/ui32_to_extF80.Po \
	./$(DEPDIR)/ui32_to_extF80M.Po ./$(DEPDIR)/ui32_to_f128.Po \
	./$(DEPDIR)/ui32_to_f128M.Po ./$(DEPDIR)/ui32_to_f32.Po \
	./$(DEPDIR)/ui32_to_f64.Po ./$(DEPDIR)/ui64_to_extF80.Po \
	./$(DEPDIR)/ui64_to_extF80M.Po ./$(DEPDIR)/ui64_to_f128.Po \
	./$(DEPDIR)/ui64_to_f128M.Po ./$(DEPDIR)/ui64_to_f32.Po \
	./$(DEPDIR)/ui64_to_f64.Po
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libsoftfloat_a_SOURCES)
DIST_SOURCES = $(libsoftfloat_a_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(include_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
AM_RECURSIVE_TARGETS = cscope
am__DIST_COMMON = $(srcdir)/Makefile.in compile config.guess \
	config.sub depcomp install-sh ltmain.sh missing
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
DIST_ARCHIVES = $(distdir).tar.gz $(distdir).tar.bz2
GZIP_ENV = --best
DIST_TARGETS = dist-bzip2 dist-gzip
# Exists only to be overridden by the user if desired.
AM_DISTCHECK_DVI_TARGET = dvi
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
VPATH = $(srcdir):$(srcdir)/8086-SSE
ACLOCAL = ${SHELL} '../../../libraries/SoftFloat-3a/source/missing' aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} '../../../libraries/SoftFloat-3a/source/missing' autoconf
AUTOHEADER = ${SHELL} '../../../libraries/SoftFloat-3a/source/missing' autoheader
AUTOMAKE = ${SHELL} '../../../libraries/SoftFloat-3a/source/missing' automake-1.16
AWK = gawk
CC = ../../../cslbuild/x86_64-pc-cygwin/cachecc.sh
CCDEPMODE = depmode=gcc3
CFLAGS =  -O2
CPPFLAGS =  -I/usr/include/freetype2 -I/usr/include/ncurses  -I../../../libraries/SoftFloat-3a/source -I/cygdrive/d/reduce-algebra/libraries/SoftFloat-3a/source/8086-SSE -I/cygdrive/d/reduce-algebra/libraries/SoftFloat-3a/source/include
CSCOPE = cscope
CTAGS = ctags
CYGPATH_W = cygpath -w
DEFS = -DPACKAGE_NAME=\"SoftFP\" -DPACKAGE_TARNAME=\"softfp\" -DPACKAGE_VERSION=\"3a\" -DPACKAGE_STRING=\"SoftFP\ 3a\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE_URL=\"\" -DPACKAGE=\"softfp\" -DVERSION=\"3a\" -DHAVE_STDIO_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_STRINGS_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_UNISTD_H=1 -DSTDC_HEADERS=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\".libs/\" -DLITTLEENDIAN=1 -DSIZEOF_VOID_P=8 -DSOFTFLOAT_FAST_INT64=1 -DSOFTFLOAT_FAST_DIV64TO32=1
DEPDIR = .deps
DLLTOOL = dlltool
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
ETAGS = etags
EXEEXT = .exe
FGREP = /usr/bin/grep -F
FILECMD = file
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} '../../../libraries/SoftFloat-3a/source/missing' makeinfo
MANIFEST_TOOL = :
MKDIR_P = /usr/bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = softfp
PACKAGE_BUGREPORT = 
PACKAGE_NAME = SoftFP
PACKAGE_STRING = SoftFP 3a
PACKAGE_TARNAME = softfp
PACKAGE_URL = 
PACKAGE_VERSION = 3a
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 3a
abs_builddir = ../../../cslbuild/x86_64-pc-cygwin/softfloat
abs_srcdir = ../../../libraries/SoftFloat-3a/source
abs_top_builddir = ../../../cslbuild/x86_64-pc-cygwin/softfloat
abs_top_srcdir = ../../../libraries/SoftFloat-3a/source
ac_ct_AR = ar
ac_ct_CC = ../../../cslbuild/x86_64-pc-cygwin/cachecc.sh
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-cygwin
build_alias = 
build_cpu = x86_64
build_os = cygwin
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-cygwin
host_alias = 
host_cpu = x86_64
host_os = cygwin
host_vendor = pc
htmldir = ${docdir}
includedir = ../../../cslbuild/x86_64-pc-cygwin/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} ../../../libraries/SoftFloat-3a/source/install-sh
libdir = ../../../cslbuild/x86_64-pc-cygwin/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = ../../../cslbuild/x86_64-pc-cygwin
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = ../../../libraries/SoftFloat-3a/source
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = 
top_builddir = .
top_srcdir = ../../../libraries/SoftFloat-3a/source
lib_LIBRARIES = libsoftfloat.a
ACLOCAL_AMFLAGS = -I m4
SOFTFLOAT_PRIMITIVES = \
  s_eq128.c \
  s_le128.c \
  s_lt128.c \
  s_shortShiftLeft128.c \
  s_shortShiftRight128.c \
  s_shortShiftRightJam64.c \
  s_shortShiftRightJam64Extra.c \
  s_shortShiftRightJam128.c \
  s_shortShiftRightJam128Extra.c \
  s_shiftRightJam32.c \
  s_shiftRightJam64.c \
  s_shiftRightJam64Extra.c \
  s_shiftRightJam128.c \
  s_shiftRightJam128Extra.c \
  s_shiftRightJam256M.c \
  s_countLeadingZeros8.c \
  s_countLeadingZeros32.c \
  s_countLeadingZeros64.c \
  s_add128.c \
  s_add256M.c \
  s_sub128.c \
  s_sub256M.c \
  s_mul64ByShifted32To128.c \
  s_mul64To128.c \
  s_mul128By32.c \
  s_mul128To256M.c \
  s_approxRecip32_1.c \
  s_approxRecipSqrt32_1.c

SOFTFLOAT_SPECIALIZE = \
  softfloat_raiseFlags.c \
  s_f32UIToCommonNaN.c \
  s_commonNaNToF32UI.c \
  s_propagateNaNF32UI.c \
  s_f64UIToCommonNaN.c \
  s_commonNaNToF64UI.c \
  s_propagateNaNF64UI.c \
  extF80M_isSignalingNaN.c \
  s_extF80UIToCommonNaN.c \
  s_commonNaNToExtF80UI.c \
  s_propagateNaNExtF80UI.c \
  f128M_isSignalingNaN.c \
  s_f128UIToCommonNaN.c \
  s_commonNaNToF128UI.c \
  s_propagateNaNF128UI.c

SOFTFLOAT_OTHERS = \
  s_roundPackToUI32.c \
  s_roundPackToUI64.c \
  s_roundPackToI32.c \
  s_roundPackToI64.c \
  s_normSubnormalF32Sig.c \
  s_roundPackToF32.c \
  s_normRoundPackToF32.c \
  s_addMagsF32.c \
  s_subMagsF32.c \
  s_mulAddF32.c \
  s_normSubnormalF64Sig.c \
  s_roundPackToF64.c \
  s_normRoundPackToF64.c \
  s_addMagsF64.c \
  s_subMagsF64.c \
  s_mulAddF64.c \
  s_normSubnormalExtF80Sig.c \
  s_roundPackToExtF80.c \
  s_normRoundPackToExtF80.c \
  s_addMagsExtF80.c \
  s_subMagsExtF80.c \
  s_normSubnormalF128Sig.c \
  s_roundPackToF128.c \
  s_normRoundPackToF128.c \
  s_addMagsF128.c \
  s_subMagsF128.c \
  s_mulAddF128.c \
  softfloat_state.c \
  ui32_to_f32.c \
  ui32_to_f64.c \
  ui32_to_extF80.c \
  ui32_to_extF80M.c \
  ui32_to_f128.c \
  ui32_to_f128M.c \
  ui64_to_f32.c \
  ui64_to_f64.c \
  ui64_to_extF80.c \
  ui64_to_extF80M.c \
  ui64_to_f128.c \
  ui64_to_f128M.c \
  i32_to_f32.c \
  i32_to_f64.c \
  i32_to_extF80.c \
  i32_to_extF80M.c \
  i32_to_f128.c \
  i32_to_f128M.c \
  i64_to_f32.c \
  i64_to_f64.c \
  i64_to_extF80.c \
  i64_to_extF80M.c \
  i64_to_f128.c \
  i64_to_f128M.c \
  f32_to_ui32.c \
  f32_to_ui64.c \
  f32_to_i32.c \
  f32_to_i64.c \
  f32_to_ui32_r_minMag.c \
  f32_to_ui64_r_minMag.c \
  f32_to_i32_r_minMag.c \
  f32_to_i64_r_minMag.c \
  f32_to_f64.c \
  f32_to_extF80.c \
  f32_to_extF80M.c \
  f32_to_f128.c \
  f32_to_f128M.c \
  f32_roundToInt.c \
  f32_add.c \
  f32_sub.c \
  f32_mul.c \
  f32_mulAdd.c \
  f32_div.c \
  f32_rem.c \
  f32_sqrt.c \
  f32_eq.c \
  f32_le.c \
  f32_lt.c \
  f32_eq_signaling.c \
  f32_le_quiet.c \
  f32_lt_quiet.c \
  f32_isSignalingNaN.c \
  f64_to_ui32.c \
  f64_to_ui64.c \
  f64_to_i32.c \
  f64_to_i64.c \
  f64_to_ui32_r_minMag.c \
  f64_to_ui64_r_minMag.c \
  f64_to_i32_r_minMag.c \
  f64_to_i64_r_minMag.c \
  f64_to_f32.c \
  f64_to_extF80.c \
  f64_to_extF80M.c \
  f64_to_f128.c \
  f64_to_f128M.c \
  f64_roundToInt.c \
  f64_add.c \
  f64_sub.c \
  f64_mul.c \
  f64_mulAdd.c \
  f64_div.c \
  f64_rem.c \
  f64_sqrt.c \
  f64_eq.c \
  f64_le.c \
  f64_lt.c \
  f64_eq_signaling.c \
  f64_le_quiet.c \
  f64_lt_quiet.c \
  f64_isSignalingNaN.c \
  extF80_to_ui32.c \
  extF80_to_ui64.c \
  extF80_to_i32.c \
  extF80_to_i64.c \
  extF80_to_ui32_r_minMag.c \
  extF80_to_ui64_r_minMag.c \
  extF80_to_i32_r_minMag.c \
  extF80_to_i64_r_minMag.c \
  extF80_to_f32.c \
  extF80_to_f64.c \
  extF80_to_f128.c \
  extF80_roundToInt.c \
  extF80_add.c \
  extF80_sub.c \
  extF80_mul.c \
  extF80_div.c \
  extF80_rem.c \
  extF80_sqrt.c \
  extF80_eq.c \
  extF80_le.c \
  extF80_lt.c \
  extF80_eq_signaling.c \
  extF80_le_quiet.c \
  extF80_lt_quiet.c \
  extF80_isSignalingNaN.c \
  extF80M_to_ui32.c \
  extF80M_to_ui64.c \
  extF80M_to_i32.c \
  extF80M_to_i64.c \
  extF80M_to_ui32_r_minMag.c \
  extF80M_to_ui64_r_minMag.c \
  extF80M_to_i32_r_minMag.c \
  extF80M_to_i64_r_minMag.c \
  extF80M_to_f32.c \
  extF80M_to_f64.c \
  extF80M_to_f128M.c \
  extF80M_roundToInt.c \
  extF80M_add.c \
  extF80M_sub.c \
  extF80M_mul.c \
  extF80M_div.c \
  extF80M_rem.c \
  extF80M_sqrt.c \
  extF80M_eq.c \
  extF80M_le.c \
  extF80M_lt.c \
  extF80M_eq_signaling.c \
  extF80M_le_quiet.c \
  extF80M_lt_quiet.c \
  f128_to_ui32.c \
  f128_to_ui64.c \
  f128_to_i32.c \
  f128_to_i64.c \
  f128_to_ui32_r_minMag.c \
  f128_to_ui64_r_minMag.c \
  f128_to_i32_r_minMag.c \
  f128_to_i64_r_minMag.c \
  f128_to_f32.c \
  f128_to_extF80.c \
  f128_to_f64.c \
  f128_roundToInt.c \
  f128_add.c \
  f128_sub.c \
  f128_mul.c \
  f128_mulAdd.c \
  f128_div.c \
  f128_rem.c \
  f128_sqrt.c \
  f128_eq.c \
  f128_le.c \
  f128_lt.c \
  f128_eq_signaling.c \
  f128_le_quiet.c \
  f128_lt_quiet.c \
  f128_isSignalingNaN.c \
  f128M_to_ui32.c \
  f128M_to_ui64.c \
  f128M_to_i32.c \
  f128M_to_i64.c \
  f128M_to_ui32_r_minMag.c \
  f128M_to_ui64_r_minMag.c \
  f128M_to_i32_r_minMag.c \
  f128M_to_i64_r_minMag.c \
  f128M_to_f32.c \
  f128M_to_extF80M.c \
  f128M_to_f64.c \
  f128M_roundToInt.c \
  f128M_add.c \
  f128M_sub.c \
  f128M_mul.c \
  f128M_mulAdd.c \
  f128M_div.c \
  f128M_rem.c \
  f128M_sqrt.c \
  f128M_eq.c \
  f128M_le.c \
  f128M_lt.c \
  f128M_eq_signaling.c \
  f128M_le_quiet.c \
  f128M_lt_quiet.c

libsoftfloat_a_SOURCES = $(SOFTFLOAT_PRIMITIVES) \
	$(SOFTFLOAT_SPECIALIZE) $(SOFTFLOAT_OTHERS)

include_HEADERS = include/softfloat.h softfloat_types.h
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(INSTALL_DATA) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(INSTALL_DATA) $$list2 "$(DESTDIR)$(libdir)" || exit $$?; }
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  if test -f $$p; then \
	    $(am__strip_dir) \
	    echo " ( cd '$(DESTDIR)$(libdir)' && $(RANLIB) $$f )"; \
	    ( cd "$(DESTDIR)$(libdir)" && $(RANLIB) $$f ) || exit $$?; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libdir)'; $(am__uninstall_files_from_dir)

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)

libsoftfloat.a: $(libsoftfloat_a_OBJECTS) $(libsoftfloat_a_DEPENDENCIES) $(EXTRA_libsoftfloat_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libsoftfloat.a
	$(AM_V_AR)$(libsoftfloat_a_AR) libsoftfloat.a $(libsoftfloat_a_OBJECTS) $(libsoftfloat_a_LIBADD)
	$(AM_V_at)$(RANLIB) libsoftfloat.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/extF80M_add.Po # am--include-marker
include ./$(DEPDIR)/extF80M_div.Po # am--include-marker
include ./$(DEPDIR)/extF80M_eq.Po # am--include-marker
include ./$(DEPDIR)/extF80M_eq_signaling.Po # am--include-marker
include ./$(DEPDIR)/extF80M_isSignalingNaN.Po # am--include-marker
include ./$(DEPDIR)/extF80M_le.Po # am--include-marker
include ./$(DEPDIR)/extF80M_le_quiet.Po # am--include-marker
include ./$(DEPDIR)/extF80M_lt.Po # am--include-marker
include ./$(DEPDIR)/extF80M_lt_quiet.Po # am--include-marker
include ./$(DEPDIR)/extF80M_mul.Po # am--include-marker
include ./$(DEPDIR)/extF80M_rem.Po # am--include-marker
include ./$(DEPDIR)/extF80M_roundToInt.Po # am--include-marker
include ./$(DEPDIR)/extF80M_sqrt.Po # am--include-marker
include ./$(DEPDIR)/extF80M_sub.Po # am--include-marker
include ./$(DEPDIR)/extF80M_to_f128M.Po # am--include-marker
include ./$(DEPDIR)/extF80M_to_f32.Po # am--include-marker
include ./$(DEPDIR)/extF80M_to_f64.Po # am--include-marker
include ./$(DEPDIR)/extF80M_to_i32.Po # am--include-marker
include ./$(DEPDIR)/extF80M_to_i32_r_minMag.Po # am--include-marker
include ./$(DEPDIR)/extF80M_to_i64.Po # am--include-marker
include ./$(DEPDIR)/extF80M_to_i64_r_minMag.Po # am--include-marker
include ./$(DEPDIR)/extF80M_to_ui32.Po # am--include-marker
include ./$(DEPDIR)/extF80M_to_ui32_r_minMag.Po # am--include-marker
include ./$(DEPDIR)/extF80M_to_ui64.Po # am--include-marker
include ./$(DEPDIR)/extF80M_to_ui64_r_minMag.Po # am--include-marker
include ./$(DEPDIR)/extF80_add.Po # am--include-marker
include ./$(DEPDIR)/extF80_div.Po # am--include-marker
include ./$(DEPDIR)/extF80_eq.Po # am--include-marker
include ./$(DEPDIR)/extF80_eq_signaling.Po # am--include-marker
include ./$(DEPDIR)/extF80_isSignalingNaN.Po # am--include-marker
include ./$(DEPDIR)/extF80_le.Po # am--include-marker
include ./$(DEPDIR)/extF80_le_quiet.Po # am--include-marker
include ./$(DEPDIR)/extF80_lt.Po # am--include-marker
include ./$(DEPDIR)/extF80_lt_quiet.Po # am--include-marker
include ./$(DEPDIR)/extF80_mul.Po # am--include-marker
include ./$(DEPDIR)/extF80_rem.Po # am--include-marker
include ./$(DEPDIR)/extF80_roundToInt.Po # am--include-marker
include ./$(DEPDIR)/extF80_sqrt.Po # am--include-marker
include ./$(DEPDIR)/extF80_sub.Po # am--include-marker
include ./$(DEPDIR)/extF80_to_f128.Po # am--include-marker
include ./$(DEPDIR)/extF80_to_f32.Po # am--include-marker
include ./$(DEPDIR)/extF80_to_f64.Po # am--include-marker
include ./$(DEPDIR)/extF80_to_i32.Po # am--include-marker
include ./$(DEPDIR)/extF80_to_i32_r_minMag.Po # am--include-marker
include ./$(DEPDIR)/extF80_to_i64.Po # am--include-marker
include ./$(DEPDIR)/extF80_to_i64_r_minMag.Po # am--include-marker
include ./$(DEPDIR)/extF80_to_ui32.Po # am--include-marker
include ./$(DEPDIR)/extF80_to_ui32_r_minMag.Po # am--include-marker
include ./$(DEPDIR)/extF80_to_ui64.Po # am--include-marker
include ./$(DEPDIR)/extF80_to_ui64_r_minMag.Po # am--include-marker
include ./$(DEPDIR)/f128M_add.Po # am--include-marker
include ./$(DEPDIR)/f128M_div.Po # am--include-marker
include ./$(DEPDIR)/f128M_eq.Po # am--include-marker
include ./$(DEPDIR)/f128M_eq_signaling.Po # am--include-marker
include ./$(DEPDIR)/f128M_isSignalingNaN.Po # am--include-marker
include ./$(DEPDIR)/f128M_le.Po # am--include-marker
include ./$(DEPDIR)/f128M_le_quiet.Po # am--include-marker
include ./$(DEPDIR)/f128M_lt.Po # am--include-marker
include ./$(DEPDIR)/f128M_lt_quiet.Po # am--include-marker
include ./$(DEPDIR)/f128M_mul.Po # am--include-marker
include ./$(DEPDIR)/f128M_mulAdd.Po # am--include-marker
include ./$(DEPDIR)/f128M_rem.Po # am--include-marker
include ./$(DEPDIR)/f128M_roundToInt.Po # am--include-marker
include ./$(DEPDIR)/f128M_sqrt.Po # am--include-marker
include ./$(DEPDIR)/f128M_sub.Po # am--include-marker
include ./$(DEPDIR)/f128M_to_extF80M.Po # am--include-marker
include ./$(DEPDIR)/f128M_to_f32.Po # am--include-marker
include ./$(DEPDIR)/f128M_to_f64.Po # am--include-marker
include ./$(DEPDIR)/f128M_to_i32.Po # am--include-marker
include ./$(DEPDIR)/f128M_to_i32_r_minMag.Po # am--include-marker
include ./$(DEPDIR)/f128M_to_i64.Po # am--include-marker
include ./$(DEPDIR)/f128M_to_i64_r_minMag.Po # am--include-marker
include ./$(DEPDIR)/f128M_to_ui32.Po # am--include-marker
include ./$(DEPDIR)/f128M_to_ui32_r_minMag.Po # am--include-marker
include ./$(DEPDIR)/f128M_to_ui64.Po # am--include-marker
include ./$(DEPDIR)/f128M_to_ui64_r_minMag.Po # am--include-marker
include ./$(DEPDIR)/f128_add.Po # am--include-marker
include ./$(DEPDIR)/f128_div.Po # am--include-marker
include ./$(DEPDIR)/f128_eq.Po # am--include-marker
include ./$(DEPDIR)/f128_eq_signaling.Po # am--include-marker
include ./$(DEPDIR)/f128_isSignalingNaN.Po # am--include-marker
include ./$(DEPDIR)/f128_le.Po # am--include-marker
include ./$(DEPDIR)/f128_le_quiet.Po # am--include-marker
include ./$(DEPDIR)/f128_lt.Po # am--include-marker
include ./$(DEPDIR)/f128_lt_quiet.Po # am--include-marker
include ./$(DEPDIR)/f128_mul.Po # am--include-marker
include ./$(DEPDIR)/f128_mulAdd.Po # am--include-marker
include ./$(DEPDIR)/f128_rem.Po # am--include-marker
include ./$(DEPDIR)/f128_roundToInt.Po # am--include-marker
include ./$(DEPDIR)/f128_sqrt.Po # am--include-marker
include ./$(DEPDIR)/f128_sub.Po # am--include-marker
include ./$(DEPDIR)/f128_to_extF80.Po # am--include-marker
include ./$(DEPDIR)/f128_to_f32.Po # am--include-marker
include ./$(DEPDIR)/f128_to_f64.Po # am--include-marker
include ./$(DEPDIR)/f128_to_i32.Po # am--include-marker
include ./$(DEPDIR)/f128_to_i32_r_minMag.Po # am--include-marker
include ./$(DEPDIR)/f128_to_i64.Po # am--include-marker
include ./$(DEPDIR)/f128_to_i64_r_minMag.Po # am--include-marker
include ./$(DEPDIR)/f128_to_ui32.Po # am--include-marker
include ./$(DEPDIR)/f128_to_ui32_r_minMag.Po # am--include-marker
include ./$(DEPDIR)/f128_to_ui64.Po # am--include-marker
include ./$(DEPDIR)/f128_to_ui64_r_minMag.Po # am--include-marker
include ./$(DEPDIR)/f32_add.Po # am--include-marker
include ./$(DEPDIR)/f32_div.Po # am--include-marker
include ./$(DEPDIR)/f32_eq.Po # am--include-marker
include ./$(DEPDIR)/f32_eq_signaling.Po # am--include-marker
include ./$(DEPDIR)/f32_isSignalingNaN.Po # am--include-marker
include ./$(DEPDIR)/f32_le.Po # am--include-marker
include ./$(DEPDIR)/f32_le_quiet.Po # am--include-marker
include ./$(DEPDIR)/f32_lt.Po # am--include-marker
include ./$(DEPDIR)/f32_lt_quiet.Po # am--include-marker
include ./$(DEPDIR)/f32_mul.Po # am--include-marker
include ./$(DEPDIR)/f32_mulAdd.Po # am--include-marker
include ./$(DEPDIR)/f32_rem.Po # am--include-marker
include ./$(DEPDIR)/f32_roundToInt.Po # am--include-marker
include ./$(DEPDIR)/f32_sqrt.Po # am--include-marker
include ./$(DEPDIR)/f32_sub.Po # am--include-marker
include ./$(DEPDIR)/f32_to_extF80.Po # am--include-marker
include ./$(DEPDIR)/f32_to_extF80M.Po # am--include-marker
include ./$(DEPDIR)/f32_to_f128.Po # am--include-marker
include ./$(DEPDIR)/f32_to_f128M.Po # am--include-marker
include ./$(DEPDIR)/f32_to_f64.Po # am--include-marker
include ./$(DEPDIR)/f32_to_i32.Po # am--include-marker
include ./$(DEPDIR)/f32_to_i32_r_minMag.Po # am--include-marker
include ./$(DEPDIR)/f32_to_i64.Po # am--include-marker
include ./$(DEPDIR)/f32_to_i64_r_minMag.Po # am--include-marker
include ./$(DEPDIR)/f32_to_ui32.Po # am--include-marker
include ./$(DEPDIR)/f32_to_ui32_r_minMag.Po # am--include-marker
include ./$(DEPDIR)/f32_to_ui64.Po # am--include-marker
include ./$(DEPDIR)/f32_to_ui64_r_minMag.Po # am--include-marker
include ./$(DEPDIR)/f64_add.Po # am--include-marker
include ./$(DEPDIR)/f64_div.Po # am--include-marker
include ./$(DEPDIR)/f64_eq.Po # am--include-marker
include ./$(DEPDIR)/f64_eq_signaling.Po # am--include-marker
include ./$(DEPDIR)/f64_isSignalingNaN.Po # am--include-marker
include ./$(DEPDIR)/f64_le.Po # am--include-marker
include ./$(DEPDIR)/f64_le_quiet.Po # am--include-marker
include ./$(DEPDIR)/f64_lt.Po # am--include-marker
include ./$(DEPDIR)/f64_lt_quiet.Po # am--include-marker
include ./$(DEPDIR)/f64_mul.Po # am--include-marker
include ./$(DEPDIR)/f64_mulAdd.Po # am--include-marker
include ./$(DEPDIR)/f64_rem.Po # am--include-marker
include ./$(DEPDIR)/f64_roundToInt.Po # am--include-marker
include ./$(DEPDIR)/f64_sqrt.Po # am--include-marker
include ./$(DEPDIR)/f64_sub.Po # am--include-marker
include ./$(DEPDIR)/f64_to_extF80.Po # am--include-marker
include ./$(DEPDIR)/f64_to_extF80M.Po # am--include-marker
include ./$(DEPDIR)/f64_to_f128.Po # am--include-marker
include ./$(DEPDIR)/f64_to_f128M.Po # am--include-marker
include ./$(DEPDIR)/f64_to_f32.Po # am--include-marker
include ./$(DEPDIR)/f64_to_i32.Po # am--include-marker
include ./$(DEPDIR)/f64_to_i32_r_minMag.Po # am--include-marker
include ./$(DEPDIR)/f64_to_i64.Po # am--include-marker
include ./$(DEPDIR)/f64_to_i64_r_minMag.Po # am--include-marker
include ./$(DEPDIR)/f64_to_ui32.Po # am--include-marker
include ./$(DEPDIR)/f64_to_ui32_r_minMag.Po # am--include-marker
include ./$(DEPDIR)/f64_to_ui64.Po # am--include-marker
include ./$(DEPDIR)/f64_to_ui64_r_minMag.Po # am--include-marker
include ./$(DEPDIR)/i32_to_extF80.Po # am--include-marker
include ./$(DEPDIR)/i32_to_extF80M.Po # am--include-marker
include ./$(DEPDIR)/i32_to_f128.Po # am--include-marker
include ./$(DEPDIR)/i32_to_f128M.Po # am--include-marker
include ./$(DEPDIR)/i32_to_f32.Po # am--include-marker
include ./$(DEPDIR)/i32_to_f64.Po # am--include-marker
include ./$(DEPDIR)/i64_to_extF80.Po # am--include-marker
include ./$(DEPDIR)/i64_to_extF80M.Po # am--include-marker
include ./$(DEPDIR)/i64_to_f128.Po # am--include-marker
include ./$(DEPDIR)/i64_to_f128M.Po # am--include-marker
include ./$(DEPDIR)/i64_to_f32.Po # am--include-marker
include ./$(DEPDIR)/i64_to_f64.Po # am--include-marker
include ./$(DEPDIR)/s_add128.Po # am--include-marker
include ./$(DEPDIR)/s_add256M.Po # am--include-marker
include ./$(DEPDIR)/s_addMagsExtF80.Po # am--include-marker
include ./$(DEPDIR)/s_addMagsF128.Po # am--include-marker
include ./$(DEPDIR)/s_addMagsF32.Po # am--include-marker
include ./$(DEPDIR)/s_addMagsF64.Po # am--include-marker
include ./$(DEPDIR)/s_approxRecip32_1.Po # am--include-marker
include ./$(DEPDIR)/s_approxRecipSqrt32_1.Po # am--include-marker
include ./$(DEPDIR)/s_commonNaNToExtF80UI.Po # am--include-marker
include ./$(DEPDIR)/s_commonNaNToF128UI.Po # am--include-marker
include ./$(DEPDIR)/s_commonNaNToF32UI.Po # am--include-marker
include ./$(DEPDIR)/s_commonNaNToF64UI.Po # am--include-marker
include ./$(DEPDIR)/s_countLeadingZeros32.Po # am--include-marker
include ./$(DEPDIR)/s_countLeadingZeros64.Po # am--include-marker
include ./$(DEPDIR)/s_countLeadingZeros8.Po # am--include-marker
include ./$(DEPDIR)/s_eq128.Po # am--include-marker
include ./$(DEPDIR)/s_extF80UIToCommonNaN.Po # am--include-marker
include ./$(DEPDIR)/s_f128UIToCommonNaN.Po # am--include-marker
include ./$(DEPDIR)/s_f32UIToCommonNaN.Po # am--include-marker
include ./$(DEPDIR)/s_f64UIToCommonNaN.Po # am--include-marker
include ./$(DEPDIR)/s_le128.Po # am--include-marker
include ./$(DEPDIR)/s_lt128.Po # am--include-marker
include ./$(DEPDIR)/s_mul128By32.Po # am--include-marker
include ./$(DEPDIR)/s_mul128To256M.Po # am--include-marker
include ./$(DEPDIR)/s_mul64ByShifted32To128.Po # am--include-marker
include ./$(DEPDIR)/s_mul64To128.Po # am--include-marker
include ./$(DEPDIR)/s_mulAddF128.Po # am--include-marker
include ./$(DEPDIR)/s_mulAddF32.Po # am--include-marker
include ./$(DEPDIR)/s_mulAddF64.Po # am--include-marker
include ./$(DEPDIR)/s_normRoundPackToExtF80.Po # am--include-marker
include ./$(DEPDIR)/s_normRoundPackToF128.Po # am--include-marker
include ./$(DEPDIR)/s_normRoundPackToF32.Po # am--include-marker
include ./$(DEPDIR)/s_normRoundPackToF64.Po # am--include-marker
include ./$(DEPDIR)/s_normSubnormalExtF80Sig.Po # am--include-marker
include ./$(DEPDIR)/s_normSubnormalF128Sig.Po # am--include-marker
include ./$(DEPDIR)/s_normSubnormalF32Sig.Po # am--include-marker
include ./$(DEPDIR)/s_normSubnormalF64Sig.Po # am--include-marker
include ./$(DEPDIR)/s_propagateNaNExtF80UI.Po # am--include-marker
include ./$(DEPDIR)/s_propagateNaNF128UI.Po # am--include-marker
include ./$(DEPDIR)/s_propagateNaNF32UI.Po # am--include-marker
include ./$(DEPDIR)/s_propagateNaNF64UI.Po # am--include-marker
include ./$(DEPDIR)/s_roundPackToExtF80.Po # am--include-marker
include ./$(DEPDIR)/s_roundPackToF128.Po # am--include-marker
include ./$(DEPDIR)/s_roundPackToF32.Po # am--include-marker
include ./$(DEPDIR)/s_roundPackToF64.Po # am--include-marker
include ./$(DEPDIR)/s_roundPackToI32.Po # am--include-marker
include ./$(DEPDIR)/s_roundPackToI64.Po # am--include-marker
include ./$(DEPDIR)/s_roundPackToUI32.Po # am--include-marker
include ./$(DEPDIR)/s_roundPackToUI64.Po # am--include-marker
include ./$(DEPDIR)/s_shiftRightJam128.Po # am--include-marker
include ./$(DEPDIR)/s_shiftRightJam128Extra.Po # am--include-marker
include ./$(DEPDIR)/s_shiftRightJam256M.Po # am--include-marker
include ./$(DEPDIR)/s_shiftRightJam32.Po # am--include-marker
include ./$(DEPDIR)/s_shiftRightJam64.Po # am--include-marker
include ./$(DEPDIR)/s_shiftRightJam64Extra.Po # am--include-marker
include ./$(DEPDIR)/s_shortShiftLeft128.Po # am--include-marker
include ./$(DEPDIR)/s_shortShiftRight128.Po # am--include-marker
include ./$(DEPDIR)/s_shortShiftRightJam128.Po # am--include-marker
include ./$(DEPDIR)/s_shortShiftRightJam128Extra.Po # am--include-marker
include ./$(DEPDIR)/s_shortShiftRightJam64.Po # am--include-marker
include ./$(DEPDIR)/s_shortShiftRightJam64Extra.Po # am--include-marker
include ./$(DEPDIR)/s_sub128.Po # am--include-marker
include ./$(DEPDIR)/s_sub256M.Po # am--include-marker
include ./$(DEPDIR)/s_subMagsExtF80.Po # am--include-marker
include ./$(DEPDIR)/s_subMagsF128.Po # am--include-marker
include ./$(DEPDIR)/s_subMagsF32.Po # am--include-marker
include ./$(DEPDIR)/s_subMagsF64.Po # am--include-marker
include ./$(DEPDIR)/softfloat_raiseFlags.Po # am--include-marker
include ./$(DEPDIR)/softfloat_state.Po # am--include-marker
include ./$(DEPDIR)/ui32_to_extF80.Po # am--include-marker
include ./$(DEPDIR)/ui32_to_extF80M.Po # am--include-marker
include ./$(DEPDIR)/ui32_to_f128.Po # am--include-marker
include ./$(DEPDIR)/ui32_to_f128M.Po # am--include-marker
include ./$(DEPDIR)/ui32_to_f32.Po # am--include-marker
include ./$(DEPDIR)/ui32_to_f64.Po # am--include-marker
include ./$(DEPDIR)/ui64_to_extF80.Po # am--include-marker
include ./$(DEPDIR)/ui64_to_extF80M.Po # am--include-marker
include ./$(DEPDIR)/ui64_to_f128.Po # am--include-marker
include ./$(DEPDIR)/ui64_to_f128M.Po # am--include-marker
include ./$(DEPDIR)/ui64_to_f32.Po # am--include-marker
include ./$(DEPDIR)/ui64_to_f64.Po # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool config.lt
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files
distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).tar.gz
	$(am__post_remove_distdir)
dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-zstd: distdir
	tardir=$(distdir) && $(am__tar) | zstd -c $${ZSTD_CLEVEL-$${ZSTD_OPT--19}} >$(distdir).tar.zst
	$(am__post_remove_distdir)

dist-tarZ: distdir
	@echo WARNING: "Support for distribution archives compressed with" \
		       "legacy program 'compress' is deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	@echo WARNING: "Support for shar distribution archives is" \
	               "deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	shar $(distdir) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	*.tar.zst*) \
	  zstd -dc $(distdir).tar.zst | $(am__untar) ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_build/sub $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build/sub \
	  && ../../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=../.. --prefix="$$dc_install_base" \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) $(AM_DISTCHECK_DVI_TARGET) \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
		-rm -f ./$(DEPDIR)/extF80M_add.Po
	-rm -f ./$(DEPDIR)/extF80M_div.Po
	-rm -f ./$(DEPDIR)/extF80M_eq.Po
	-rm -f ./$(DEPDIR)/extF80M_eq_signaling.Po
	-rm -f ./$(DEPDIR)/extF80M_isSignalingNaN.Po
	-rm -f ./$(DEPDIR)/extF80M_le.Po
	-rm -f ./$(DEPDIR)/extF80M_le_quiet.Po
	-rm -f ./$(DEPDIR)/extF80M_lt.Po
	-rm -f ./$(DEPDIR)/extF80M_lt_quiet.Po
	-rm -f ./$(DEPDIR)/extF80M_mul.Po
	-rm -f ./$(DEPDIR)/extF80M_rem.Po
	-rm -f ./$(DEPDIR)/extF80M_roundToInt.Po
	-rm -f ./$(DEPDIR)/extF80M_sqrt.Po
	-rm -f ./$(DEPDIR)/extF80M_sub.Po
	-rm -f ./$(DEPDIR)/extF80M_to_f128M.Po
	-rm -f ./$(DEPDIR)/extF80M_to_f32.Po
	-rm -f ./$(DEPDIR)/extF80M_to_f64.Po
	-rm -f ./$(DEPDIR)/extF80M_to_i32.Po
	-rm -f ./$(DEPDIR)/extF80M_to_i32_r_minMag.Po
	-rm -f ./$(DEPDIR)/extF80M_to_i64.Po
	-rm -f ./$(DEPDIR)/extF80M_to_i64_r_minMag.Po
	-rm -f ./$(DEPDIR)/extF80M_to_ui32.Po
	-rm -f ./$(DEPDIR)/extF80M_to_ui32_r_minMag.Po
	-rm -f ./$(DEPDIR)/extF80M_to_ui64.Po
	-rm -f ./$(DEPDIR)/extF80M_to_ui64_r_minMag.Po
	-rm -f ./$(DEPDIR)/extF80_add.Po
	-rm -f ./$(DEPDIR)/extF80_div.Po
	-rm -f ./$(DEPDIR)/extF80_eq.Po
	-rm -f ./$(DEPDIR)/extF80_eq_signaling.Po
	-rm -f ./$(DEPDIR)/extF80_isSignalingNaN.Po
	-rm -f ./$(DEPDIR)/extF80_le.Po
	-rm -f ./$(DEPDIR)/extF80_le_quiet.Po
	-rm -f ./$(DEPDIR)/extF80_lt.Po
	-rm -f ./$(DEPDIR)/extF80_lt_quiet.Po
	-rm -f ./$(DEPDIR)/extF80_mul.Po
	-rm -f ./$(DEPDIR)/extF80_rem.Po
	-rm -f ./$(DEPDIR)/extF80_roundToInt.Po
	-rm -f ./$(DEPDIR)/extF80_sqrt.Po
	-rm -f ./$(DEPDIR)/extF80_sub.Po
	-rm -f ./$(DEPDIR)/extF80_to_f128.Po
	-rm -f ./$(DEPDIR)/extF80_to_f32.Po
	-rm -f ./$(DEPDIR)/extF80_to_f64.Po
	-rm -f ./$(DEPDIR)/extF80_to_i32.Po
	-rm -f ./$(DEPDIR)/extF80_to_i32_r_minMag.Po
	-rm -f ./$(DEPDIR)/extF80_to_i64.Po
	-rm -f ./$(DEPDIR)/extF80_to_i64_r_minMag.Po
	-rm -f ./$(DEPDIR)/extF80_to_ui32.Po
	-rm -f ./$(DEPDIR)/extF80_to_ui32_r_minMag.Po
	-rm -f ./$(DEPDIR)/extF80_to_ui64.Po
	-rm -f ./$(DEPDIR)/extF80_to_ui64_r_minMag.Po
	-rm -f ./$(DEPDIR)/f128M_add.Po
	-rm -f ./$(DEPDIR)/f128M_div.Po
	-rm -f ./$(DEPDIR)/f128M_eq.Po
	-rm -f ./$(DEPDIR)/f128M_eq_signaling.Po
	-rm -f ./$(DEPDIR)/f128M_isSignalingNaN.Po
	-rm -f ./$(DEPDIR)/f128M_le.Po
	-rm -f ./$(DEPDIR)/f128M_le_quiet.Po
	-rm -f ./$(DEPDIR)/f128M_lt.Po
	-rm -f ./$(DEPDIR)/f128M_lt_quiet.Po
	-rm -f ./$(DEPDIR)/f128M_mul.Po
	-rm -f ./$(DEPDIR)/f128M_mulAdd.Po
	-rm -f ./$(DEPDIR)/f128M_rem.Po
	-rm -f ./$(DEPDIR)/f128M_roundToInt.Po
	-rm -f ./$(DEPDIR)/f128M_sqrt.Po
	-rm -f ./$(DEPDIR)/f128M_sub.Po
	-rm -f ./$(DEPDIR)/f128M_to_extF80M.Po
	-rm -f ./$(DEPDIR)/f128M_to_f32.Po
	-rm -f ./$(DEPDIR)/f128M_to_f64.Po
	-rm -f ./$(DEPDIR)/f128M_to_i32.Po
	-rm -f ./$(DEPDIR)/f128M_to_i32_r_minMag.Po
	-rm -f ./$(DEPDIR)/f128M_to_i64.Po
	-rm -f ./$(DEPDIR)/f128M_to_i64_r_minMag.Po
	-rm -f ./$(DEPDIR)/f128M_to_ui32.Po
	-rm -f ./$(DEPDIR)/f128M_to_ui32_r_minMag.Po
	-rm -f ./$(DEPDIR)/f128M_to_ui64.Po
	-rm -f ./$(DEPDIR)/f128M_to_ui64_r_minMag.Po
	-rm -f ./$(DEPDIR)/f128_add.Po
	-rm -f ./$(DEPDIR)/f128_div.Po
	-rm -f ./$(DEPDIR)/f128_eq.Po
	-rm -f ./$(DEPDIR)/f128_eq_signaling.Po
	-rm -f ./$(DEPDIR)/f128_isSignalingNaN.Po
	-rm -f ./$(DEPDIR)/f128_le.Po
	-rm -f ./$(DEPDIR)/f128_le_quiet.Po
	-rm -f ./$(DEPDIR)/f128_lt.Po
	-rm -f ./$(DEPDIR)/f128_lt_quiet.Po
	-rm -f ./$(DEPDIR)/f128_mul.Po
	-rm -f ./$(DEPDIR)/f128_mulAdd.Po
	-rm -f ./$(DEPDIR)/f128_rem.Po
	-rm -f ./$(DEPDIR)/f128_roundToInt.Po
	-rm -f ./$(DEPDIR)/f128_sqrt.Po
	-rm -f ./$(DEPDIR)/f128_sub.Po
	-rm -f ./$(DEPDIR)/f128_to_extF80.Po
	-rm -f ./$(DEPDIR)/f128_to_f32.Po
	-rm -f ./$(DEPDIR)/f128_to_f64.Po
	-rm -f ./$(DEPDIR)/f128_to_i32.Po
	-rm -f ./$(DEPDIR)/f128_to_i32_r_minMag.Po
	-rm -f ./$(DEPDIR)/f128_to_i64.Po
	-rm -f ./$(DEPDIR)/f128_to_i64_r_minMag.Po
	-rm -f ./$(DEPDIR)/f128_to_ui32.Po
	-rm -f ./$(DEPDIR)/f128_to_ui32_r_minMag.Po
	-rm -f ./$(DEPDIR)/f128_to_ui64.Po
	-rm -f ./$(DEPDIR)/f128_to_ui64_r_minMag.Po
	-rm -f ./$(DEPDIR)/f32_add.Po
	-rm -f ./$(DEPDIR)/f32_div.Po
	-rm -f ./$(DEPDIR)/f32_eq.Po
	-rm -f ./$(DEPDIR)/f32_eq_signaling.Po
	-rm -f ./$(DEPDIR)/f32_isSignalingNaN.Po
	-rm -f ./$(DEPDIR)/f32_le.Po
	-rm -f ./$(DEPDIR)/f32_le_quiet.Po
	-rm -f ./$(DEPDIR)/f32_lt.Po
	-rm -f ./$(DEPDIR)/f32_lt_quiet.Po
	-rm -f ./$(DEPDIR)/f32_mul.Po
	-rm -f ./$(DEPDIR)/f32_mulAdd.Po
	-rm -f ./$(DEPDIR)/f32_rem.Po
	-rm -f ./$(DEPDIR)/f32_roundToInt.Po
	-rm -f ./$(DEPDIR)/f32_sqrt.Po
	-rm -f ./$(DEPDIR)/f32_sub.Po
	-rm -f ./$(DEPDIR)/f32_to_extF80.Po
	-rm -f ./$(DEPDIR)/f32_to_extF80M.Po
	-rm -f ./$(DEPDIR)/f32_to_f128.Po
	-rm -f ./$(DEPDIR)/f32_to_f128M.Po
	-rm -f ./$(DEPDIR)/f32_to_f64.Po
	-rm -f ./$(DEPDIR)/f32_to_i32.Po
	-rm -f ./$(DEPDIR)/f32_to_i32_r_minMag.Po
	-rm -f ./$(DEPDIR)/f32_to_i64.Po
	-rm -f ./$(DEPDIR)/f32_to_i64_r_minMag.Po
	-rm -f ./$(DEPDIR)/f32_to_ui32.Po
	-rm -f ./$(DEPDIR)/f32_to_ui32_r_minMag.Po
	-rm -f ./$(DEPDIR)/f32_to_ui64.Po
	-rm -f ./$(DEPDIR)/f32_to_ui64_r_minMag.Po
	-rm -f ./$(DEPDIR)/f64_add.Po
	-rm -f ./$(DEPDIR)/f64_div.Po
	-rm -f ./$(DEPDIR)/f64_eq.Po
	-rm -f ./$(DEPDIR)/f64_eq_signaling.Po
	-rm -f ./$(DEPDIR)/f64_isSignalingNaN.Po
	-rm -f ./$(DEPDIR)/f64_le.Po
	-rm -f ./$(DEPDIR)/f64_le_quiet.Po
	-rm -f ./$(DEPDIR)/f64_lt.Po
	-rm -f ./$(DEPDIR)/f64_lt_quiet.Po
	-rm -f ./$(DEPDIR)/f64_mul.Po
	-rm -f ./$(DEPDIR)/f64_mulAdd.Po
	-rm -f ./$(DEPDIR)/f64_rem.Po
	-rm -f ./$(DEPDIR)/f64_roundToInt.Po
	-rm -f ./$(DEPDIR)/f64_sqrt.Po
	-rm -f ./$(DEPDIR)/f64_sub.Po
	-rm -f ./$(DEPDIR)/f64_to_extF80.Po
	-rm -f ./$(DEPDIR)/f64_to_extF80M.Po
	-rm -f ./$(DEPDIR)/f64_to_f128.Po
	-rm -f ./$(DEPDIR)/f64_to_f128M.Po
	-rm -f ./$(DEPDIR)/f64_to_f32.Po
	-rm -f ./$(DEPDIR)/f64_to_i32.Po
	-rm -f ./$(DEPDIR)/f64_to_i32_r_minMag.Po
	-rm -f ./$(DEPDIR)/f64_to_i64.Po
	-rm -f ./$(DEPDIR)/f64_to_i64_r_minMag.Po
	-rm -f ./$(DEPDIR)/f64_to_ui32.Po
	-rm -f ./$(DEPDIR)/f64_to_ui32_r_minMag.Po
	-rm -f ./$(DEPDIR)/f64_to_ui64.Po
	-rm -f ./$(DEPDIR)/f64_to_ui64_r_minMag.Po
	-rm -f ./$(DEPDIR)/i32_to_extF80.Po
	-rm -f ./$(DEPDIR)/i32_to_extF80M.Po
	-rm -f ./$(DEPDIR)/i32_to_f128.Po
	-rm -f ./$(DEPDIR)/i32_to_f128M.Po
	-rm -f ./$(DEPDIR)/i32_to_f32.Po
	-rm -f ./$(DEPDIR)/i32_to_f64.Po
	-rm -f ./$(DEPDIR)/i64_to_extF80.Po
	-rm -f ./$(DEPDIR)/i64_to_extF80M.Po
	-rm -f ./$(DEPDIR)/i64_to_f128.Po
	-rm -f ./$(DEPDIR)/i64_to_f128M.Po
	-rm -f ./$(DEPDIR)/i64_to_f32.Po
	-rm -f ./$(DEPDIR)/i64_to_f64.Po
	-rm -f ./$(DEPDIR)/s_add128.Po
	-rm -f ./$(DEPDIR)/s_add256M.Po
	-rm -f ./$(DEPDIR)/s_addMagsExtF80.Po
	-rm -f ./$(DEPDIR)/s_addMagsF128.Po
	-rm -f ./$(DEPDIR)/s_addMagsF32.Po
	-rm -f ./$(DEPDIR)/s_addMagsF64.Po
	-rm -f ./$(DEPDIR)/s_approxRecip32_1.Po
	-rm -f ./$(DEPDIR)/s_approxRecipSqrt32_1.Po
	-rm -f ./$(DEPDIR)/s_commonNaNToExtF80UI.Po
	-rm -f ./$(DEPDIR)/s_commonNaNToF128UI.Po
	-rm -f ./$(DEPDIR)/s_commonNaNToF32UI.Po
	-rm -f ./$(DEPDIR)/s_commonNaNToF64UI.Po
	-rm -f ./$(DEPDIR)/s_countLeadingZeros32.Po
	-rm -f ./$(DEPDIR)/s_countLeadingZeros64.Po
	-rm -f ./$(DEPDIR)/s_countLeadingZeros8.Po
	-rm -f ./$(DEPDIR)/s_eq128.Po
	-rm -f ./$(DEPDIR)/s_extF80UIToCommonNaN.Po
	-rm -f ./$(DEPDIR)/s_f128UIToCommonNaN.Po
	-rm -f ./$(DEPDIR)/s_f32UIToCommonNaN.Po
	-rm -f ./$(DEPDIR)/s_f64UIToCommonNaN.Po
	-rm -f ./$(DEPDIR)/s_le128.Po
	-rm -f ./$(DEPDIR)/s_lt128.Po
	-rm -f ./$(DEPDIR)/s_mul128By32.Po
	-rm -f ./$(DEPDIR)/s_mul128To256M.Po
	-rm -f ./$(DEPDIR)/s_mul64ByShifted32To128.Po
	-rm -f ./$(DEPDIR)/s_mul64To128.Po
	-rm -f ./$(DEPDIR)/s_mulAddF128.Po
	-rm -f ./$(DEPDIR)/s_mulAddF32.Po
	-rm -f ./$(DEPDIR)/s_mulAddF64.Po
	-rm -f ./$(DEPDIR)/s_normRoundPackToExtF80.Po
	-rm -f ./$(DEPDIR)/s_normRoundPackToF128.Po
	-rm -f ./$(DEPDIR)/s_normRoundPackToF32.Po
	-rm -f ./$(DEPDIR)/s_normRoundPackToF64.Po
	-rm -f ./$(DEPDIR)/s_normSubnormalExtF80Sig.Po
	-rm -f ./$(DEPDIR)/s_normSubnormalF128Sig.Po
	-rm -f ./$(DEPDIR)/s_normSubnormalF32Sig.Po
	-rm -f ./$(DEPDIR)/s_normSubnormalF64Sig.Po
	-rm -f ./$(DEPDIR)/s_propagateNaNExtF80UI.Po
	-rm -f ./$(DEPDIR)/s_propagateNaNF128UI.Po
	-rm -f ./$(DEPDIR)/s_propagateNaNF32UI.Po
	-rm -f ./$(DEPDIR)/s_propagateNaNF64UI.Po
	-rm -f ./$(DEPDIR)/s_roundPackToExtF80.Po
	-rm -f ./$(DEPDIR)/s_roundPackToF128.Po
	-rm -f ./$(DEPDIR)/s_roundPackToF32.Po
	-rm -f ./$(DEPDIR)/s_roundPackToF64.Po
	-rm -f ./$(DEPDIR)/s_roundPackToI32.Po
	-rm -f ./$(DEPDIR)/s_roundPackToI64.Po
	-rm -f ./$(DEPDIR)/s_roundPackToUI32.Po
	-rm -f ./$(DEPDIR)/s_roundPackToUI64.Po
	-rm -f ./$(DEPDIR)/s_shiftRightJam128.Po
	-rm -f ./$(DEPDIR)/s_shiftRightJam128Extra.Po
	-rm -f ./$(DEPDIR)/s_shiftRightJam256M.Po
	-rm -f ./$(DEPDIR)/s_shiftRightJam32.Po
	-rm -f ./$(DEPDIR)/s_shiftRightJam64.Po
	-rm -f ./$(DEPDIR)/s_shiftRightJam64Extra.Po
	-rm -f ./$(DEPDIR)/s_shortShiftLeft128.Po
	-rm -f ./$(DEPDIR)/s_shortShiftRight128.Po
	-rm -f ./$(DEPDIR)/s_shortShiftRightJam128.Po
	-rm -f ./$(DEPDIR)/s_shortShiftRightJam128Extra.Po
	-rm -f ./$(DEPDIR)/s_shortShiftRightJam64.Po
	-rm -f ./$(DEPDIR)/s_shortShiftRightJam64Extra.Po
	-rm -f ./$(DEPDIR)/s_sub128.Po
	-rm -f ./$(DEPDIR)/s_sub256M.Po
	-rm -f ./$(DEPDIR)/s_subMagsExtF80.Po
	-rm -f ./$(DEPDIR)/s_subMagsF128.Po
	-rm -f ./$(DEPDIR)/s_subMagsF32.Po
	-rm -f ./$(DEPDIR)/s_subMagsF64.Po
	-rm -f ./$(DEPDIR)/softfloat_raiseFlags.Po
	-rm -f ./$(DEPDIR)/softfloat_state.Po
	-rm -f ./$(DEPDIR)/ui32_to_extF80.Po
	-rm -f ./$(DEPDIR)/ui32_to_extF80M.Po
	-rm -f ./$(DEPDIR)/ui32_to_f128.Po
	-rm -f ./$(DEPDIR)/ui32_to_f128M.Po
	-rm -f ./$(DEPDIR)/ui32_to_f32.Po
	-rm -f ./$(DEPDIR)/ui32_to_f64.Po
	-rm -f ./$(DEPDIR)/ui64_to_extF80.Po
	-rm -f ./$(DEPDIR)/ui64_to_extF80M.Po
	-rm -f ./$(DEPDIR)/ui64_to_f128.Po
	-rm -f ./$(DEPDIR)/ui64_to_f128M.Po
	-rm -f ./$(DEPDIR)/ui64_to_f32.Po
	-rm -f ./$(DEPDIR)/ui64_to_f64.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-includeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
		-rm -f ./$(DEPDIR)/extF80M_add.Po
	-rm -f ./$(DEPDIR)/extF80M_div.Po
	-rm -f ./$(DEPDIR)/extF80M_eq.Po
	-rm -f ./$(DEPDIR)/extF80M_eq_signaling.Po
	-rm -f ./$(DEPDIR)/extF80M_isSignalingNaN.Po
	-rm -f ./$(DEPDIR)/extF80M_le.Po
	-rm -f ./$(DEPDIR)/extF80M_le_quiet.Po
	-rm -f ./$(DEPDIR)/extF80M_lt.Po
	-rm -f ./$(DEPDIR)/extF80M_lt_quiet.Po
	-rm -f ./$(DEPDIR)/extF80M_mul.Po
	-rm -f ./$(DEPDIR)/extF80M_rem.Po
	-rm -f ./$(DEPDIR)/extF80M_roundToInt.Po
	-rm -f ./$(DEPDIR)/extF80M_sqrt.Po
	-rm -f ./$(DEPDIR)/extF80M_sub.Po
	-rm -f ./$(DEPDIR)/extF80M_to_f128M.Po
	-rm -f ./$(DEPDIR)/extF80M_to_f32.Po
	-rm -f ./$(DEPDIR)/extF80M_to_f64.Po
	-rm -f ./$(DEPDIR)/extF80M_to_i32.Po
	-rm -f ./$(DEPDIR)/extF80M_to_i32_r_minMag.Po
	-rm -f ./$(DEPDIR)/extF80M_to_i64.Po
	-rm -f ./$(DEPDIR)/extF80M_to_i64_r_minMag.Po
	-rm -f ./$(DEPDIR)/extF80M_to_ui32.Po
	-rm -f ./$(DEPDIR)/extF80M_to_ui32_r_minMag.Po
	-rm -f ./$(DEPDIR)/extF80M_to_ui64.Po
	-rm -f ./$(DEPDIR)/extF80M_to_ui64_r_minMag.Po
	-rm -f ./$(DEPDIR)/extF80_add.Po
	-rm -f ./$(DEPDIR)/extF80_div.Po
	-rm -f ./$(DEPDIR)/extF80_eq.Po
	-rm -f ./$(DEPDIR)/extF80_eq_signaling.Po
	-rm -f ./$(DEPDIR)/extF80_isSignalingNaN.Po
	-rm -f ./$(DEPDIR)/extF80_le.Po
	-rm -f ./$(DEPDIR)/extF80_le_quiet.Po
	-rm -f ./$(DEPDIR)/extF80_lt.Po
	-rm -f ./$(DEPDIR)/extF80_lt_quiet.Po
	-rm -f ./$(DEPDIR)/extF80_mul.Po
	-rm -f ./$(DEPDIR)/extF80_rem.Po
	-rm -f ./$(DEPDIR)/extF80_roundToInt.Po
	-rm -f ./$(DEPDIR)/extF80_sqrt.Po
	-rm -f ./$(DEPDIR)/extF80_sub.Po
	-rm -f ./$(DEPDIR)/extF80_to_f128.Po
	-rm -f ./$(DEPDIR)/extF80_to_f32.Po
	-rm -f ./$(DEPDIR)/extF80_to_f64.Po
	-rm -f ./$(DEPDIR)/extF80_to_i32.Po
	-rm -f ./$(DEPDIR)/extF80_to_i32_r_minMag.Po
	-rm -f ./$(DEPDIR)/extF80_to_i64.Po
	-rm -f ./$(DEPDIR)/extF80_to_i64_r_minMag.Po
	-rm -f ./$(DEPDIR)/extF80_to_ui32.Po
	-rm -f ./$(DEPDIR)/extF80_to_ui32_r_minMag.Po
	-rm -f ./$(DEPDIR)/extF80_to_ui64.Po
	-rm -f ./$(DEPDIR)/extF80_to_ui64_r_minMag.Po
	-rm -f ./$(DEPDIR)/f128M_add.Po
	-rm -f ./$(DEPDIR)/f128M_div.Po
	-rm -f ./$(DEPDIR)/f128M_eq.Po
	-rm -f ./$(DEPDIR)/f128M_eq_signaling.Po
	-rm -f ./$(DEPDIR)/f128M_isSignalingNaN.Po
	-rm -f ./$(DEPDIR)/f128M_le.Po
	-rm -f ./$(DEPDIR)/f128M_le_quiet.Po
	-rm -f ./$(DEPDIR)/f128M_lt.Po
	-rm -f ./$(DEPDIR)/f128M_lt_quiet.Po
	-rm -f ./$(DEPDIR)/f128M_mul.Po
	-rm -f ./$(DEPDIR)/f128M_mulAdd.Po
	-rm -f ./$(DEPDIR)/f128M_rem.Po
	-rm -f ./$(DEPDIR)/f128M_roundToInt.Po
	-rm -f ./$(DEPDIR)/f128M_sqrt.Po
	-rm -f ./$(DEPDIR)/f128M_sub.Po
	-rm -f ./$(DEPDIR)/f128M_to_extF80M.Po
	-rm -f ./$(DEPDIR)/f128M_to_f32.Po
	-rm -f ./$(DEPDIR)/f128M_to_f64.Po
	-rm -f ./$(DEPDIR)/f128M_to_i32.Po
	-rm -f ./$(DEPDIR)/f128M_to_i32_r_minMag.Po
	-rm -f ./$(DEPDIR)/f128M_to_i64.Po
	-rm -f ./$(DEPDIR)/f128M_to_i64_r_minMag.Po
	-rm -f ./$(DEPDIR)/f128M_to_ui32.Po
	-rm -f ./$(DEPDIR)/f128M_to_ui32_r_minMag.Po
	-rm -f ./$(DEPDIR)/f128M_to_ui64.Po
	-rm -f ./$(DEPDIR)/f128M_to_ui64_r_minMag.Po
	-rm -f ./$(DEPDIR)/f128_add.Po
	-rm -f ./$(DEPDIR)/f128_div.Po
	-rm -f ./$(DEPDIR)/f128_eq.Po
	-rm -f ./$(DEPDIR)/f128_eq_signaling.Po
	-rm -f ./$(DEPDIR)/f128_isSignalingNaN.Po
	-rm -f ./$(DEPDIR)/f128_le.Po
	-rm -f ./$(DEPDIR)/f128_le_quiet.Po
	-rm -f ./$(DEPDIR)/f128_lt.Po
	-rm -f ./$(DEPDIR)/f128_lt_quiet.Po
	-rm -f ./$(DEPDIR)/f128_mul.Po
	-rm -f ./$(DEPDIR)/f128_mulAdd.Po
	-rm -f ./$(DEPDIR)/f128_rem.Po
	-rm -f ./$(DEPDIR)/f128_roundToInt.Po
	-rm -f ./$(DEPDIR)/f128_sqrt.Po
	-rm -f ./$(DEPDIR)/f128_sub.Po
	-rm -f ./$(DEPDIR)/f128_to_extF80.Po
	-rm -f ./$(DEPDIR)/f128_to_f32.Po
	-rm -f ./$(DEPDIR)/f128_to_f64.Po
	-rm -f ./$(DEPDIR)/f128_to_i32.Po
	-rm -f ./$(DEPDIR)/f128_to_i32_r_minMag.Po
	-rm -f ./$(DEPDIR)/f128_to_i64.Po
	-rm -f ./$(DEPDIR)/f128_to_i64_r_minMag.Po
	-rm -f ./$(DEPDIR)/f128_to_ui32.Po
	-rm -f ./$(DEPDIR)/f128_to_ui32_r_minMag.Po
	-rm -f ./$(DEPDIR)/f128_to_ui64.Po
	-rm -f ./$(DEPDIR)/f128_to_ui64_r_minMag.Po
	-rm -f ./$(DEPDIR)/f32_add.Po
	-rm -f ./$(DEPDIR)/f32_div.Po
	-rm -f ./$(DEPDIR)/f32_eq.Po
	-rm -f ./$(DEPDIR)/f32_eq_signaling.Po
	-rm -f ./$(DEPDIR)/f32_isSignalingNaN.Po
	-rm -f ./$(DEPDIR)/f32_le.Po
	-rm -f ./$(DEPDIR)/f32_le_quiet.Po
	-rm -f ./$(DEPDIR)/f32_lt.Po
	-rm -f ./$(DEPDIR)/f32_lt_quiet.Po
	-rm -f ./$(DEPDIR)/f32_mul.Po
	-rm -f ./$(DEPDIR)/f32_mulAdd.Po
	-rm -f ./$(DEPDIR)/f32_rem.Po
	-rm -f ./$(DEPDIR)/f32_roundToInt.Po
	-rm -f ./$(DEPDIR)/f32_sqrt.Po
	-rm -f ./$(DEPDIR)/f32_sub.Po
	-rm -f ./$(DEPDIR)/f32_to_extF80.Po
	-rm -f ./$(DEPDIR)/f32_to_extF80M.Po
	-rm -f ./$(DEPDIR)/f32_to_f128.Po
	-rm -f ./$(DEPDIR)/f32_to_f128M.Po
	-rm -f ./$(DEPDIR)/f32_to_f64.Po
	-rm -f ./$(DEPDIR)/f32_to_i32.Po
	-rm -f ./$(DEPDIR)/f32_to_i32_r_minMag.Po
	-rm -f ./$(DEPDIR)/f32_to_i64.Po
	-rm -f ./$(DEPDIR)/f32_to_i64_r_minMag.Po
	-rm -f ./$(DEPDIR)/f32_to_ui32.Po
	-rm -f ./$(DEPDIR)/f32_to_ui32_r_minMag.Po
	-rm -f ./$(DEPDIR)/f32_to_ui64.Po
	-rm -f ./$(DEPDIR)/f32_to_ui64_r_minMag.Po
	-rm -f ./$(DEPDIR)/f64_add.Po
	-rm -f ./$(DEPDIR)/f64_div.Po
	-rm -f ./$(DEPDIR)/f64_eq.Po
	-rm -f ./$(DEPDIR)/f64_eq_signaling.Po
	-rm -f ./$(DEPDIR)/f64_isSignalingNaN.Po
	-rm -f ./$(DEPDIR)/f64_le.Po
	-rm -f ./$(DEPDIR)/f64_le_quiet.Po
	-rm -f ./$(DEPDIR)/f64_lt.Po
	-rm -f ./$(DEPDIR)/f64_lt_quiet.Po
	-rm -f ./$(DEPDIR)/f64_mul.Po
	-rm -f ./$(DEPDIR)/f64_mulAdd.Po
	-rm -f ./$(DEPDIR)/f64_rem.Po
	-rm -f ./$(DEPDIR)/f64_roundToInt.Po
	-rm -f ./$(DEPDIR)/f64_sqrt.Po
	-rm -f ./$(DEPDIR)/f64_sub.Po
	-rm -f ./$(DEPDIR)/f64_to_extF80.Po
	-rm -f ./$(DEPDIR)/f64_to_extF80M.Po
	-rm -f ./$(DEPDIR)/f64_to_f128.Po
	-rm -f ./$(DEPDIR)/f64_to_f128M.Po
	-rm -f ./$(DEPDIR)/f64_to_f32.Po
	-rm -f ./$(DEPDIR)/f64_to_i32.Po
	-rm -f ./$(DEPDIR)/f64_to_i32_r_minMag.Po
	-rm -f ./$(DEPDIR)/f64_to_i64.Po
	-rm -f ./$(DEPDIR)/f64_to_i64_r_minMag.Po
	-rm -f ./$(DEPDIR)/f64_to_ui32.Po
	-rm -f ./$(DEPDIR)/f64_to_ui32_r_minMag.Po
	-rm -f ./$(DEPDIR)/f64_to_ui64.Po
	-rm -f ./$(DEPDIR)/f64_to_ui64_r_minMag.Po
	-rm -f ./$(DEPDIR)/i32_to_extF80.Po
	-rm -f ./$(DEPDIR)/i32_to_extF80M.Po
	-rm -f ./$(DEPDIR)/i32_to_f128.Po
	-rm -f ./$(DEPDIR)/i32_to_f128M.Po
	-rm -f ./$(DEPDIR)/i32_to_f32.Po
	-rm -f ./$(DEPDIR)/i32_to_f64.Po
	-rm -f ./$(DEPDIR)/i64_to_extF80.Po
	-rm -f ./$(DEPDIR)/i64_to_extF80M.Po
	-rm -f ./$(DEPDIR)/i64_to_f128.Po
	-rm -f ./$(DEPDIR)/i64_to_f128M.Po
	-rm -f ./$(DEPDIR)/i64_to_f32.Po
	-rm -f ./$(DEPDIR)/i64_to_f64.Po
	-rm -f ./$(DEPDIR)/s_add128.Po
	-rm -f ./$(DEPDIR)/s_add256M.Po
	-rm -f ./$(DEPDIR)/s_addMagsExtF80.Po
	-rm -f ./$(DEPDIR)/s_addMagsF128.Po
	-rm -f ./$(DEPDIR)/s_addMagsF32.Po
	-rm -f ./$(DEPDIR)/s_addMagsF64.Po
	-rm -f ./$(DEPDIR)/s_approxRecip32_1.Po
	-rm -f ./$(DEPDIR)/s_approxRecipSqrt32_1.Po
	-rm -f ./$(DEPDIR)/s_commonNaNToExtF80UI.Po
	-rm -f ./$(DEPDIR)/s_commonNaNToF128UI.Po
	-rm -f ./$(DEPDIR)/s_commonNaNToF32UI.Po
	-rm -f ./$(DEPDIR)/s_commonNaNToF64UI.Po
	-rm -f ./$(DEPDIR)/s_countLeadingZeros32.Po
	-rm -f ./$(DEPDIR)/s_countLeadingZeros64.Po
	-rm -f ./$(DEPDIR)/s_countLeadingZeros8.Po
	-rm -f ./$(DEPDIR)/s_eq128.Po
	-rm -f ./$(DEPDIR)/s_extF80UIToCommonNaN.Po
	-rm -f ./$(DEPDIR)/s_f128UIToCommonNaN.Po
	-rm -f ./$(DEPDIR)/s_f32UIToCommonNaN.Po
	-rm -f ./$(DEPDIR)/s_f64UIToCommonNaN.Po
	-rm -f ./$(DEPDIR)/s_le128.Po
	-rm -f ./$(DEPDIR)/s_lt128.Po
	-rm -f ./$(DEPDIR)/s_mul128By32.Po
	-rm -f ./$(DEPDIR)/s_mul128To256M.Po
	-rm -f ./$(DEPDIR)/s_mul64ByShifted32To128.Po
	-rm -f ./$(DEPDIR)/s_mul64To128.Po
	-rm -f ./$(DEPDIR)/s_mulAddF128.Po
	-rm -f ./$(DEPDIR)/s_mulAddF32.Po
	-rm -f ./$(DEPDIR)/s_mulAddF64.Po
	-rm -f ./$(DEPDIR)/s_normRoundPackToExtF80.Po
	-rm -f ./$(DEPDIR)/s_normRoundPackToF128.Po
	-rm -f ./$(DEPDIR)/s_normRoundPackToF32.Po
	-rm -f ./$(DEPDIR)/s_normRoundPackToF64.Po
	-rm -f ./$(DEPDIR)/s_normSubnormalExtF80Sig.Po
	-rm -f ./$(DEPDIR)/s_normSubnormalF128Sig.Po
	-rm -f ./$(DEPDIR)/s_normSubnormalF32Sig.Po
	-rm -f ./$(DEPDIR)/s_normSubnormalF64Sig.Po
	-rm -f ./$(DEPDIR)/s_propagateNaNExtF80UI.Po
	-rm -f ./$(DEPDIR)/s_propagateNaNF128UI.Po
	-rm -f ./$(DEPDIR)/s_propagateNaNF32UI.Po
	-rm -f ./$(DEPDIR)/s_propagateNaNF64UI.Po
	-rm -f ./$(DEPDIR)/s_roundPackToExtF80.Po
	-rm -f ./$(DEPDIR)/s_roundPackToF128.Po
	-rm -f ./$(DEPDIR)/s_roundPackToF32.Po
	-rm -f ./$(DEPDIR)/s_roundPackToF64.Po
	-rm -f ./$(DEPDIR)/s_roundPackToI32.Po
	-rm -f ./$(DEPDIR)/s_roundPackToI64.Po
	-rm -f ./$(DEPDIR)/s_roundPackToUI32.Po
	-rm -f ./$(DEPDIR)/s_roundPackToUI64.Po
	-rm -f ./$(DEPDIR)/s_shiftRightJam128.Po
	-rm -f ./$(DEPDIR)/s_shiftRightJam128Extra.Po
	-rm -f ./$(DEPDIR)/s_shiftRightJam256M.Po
	-rm -f ./$(DEPDIR)/s_shiftRightJam32.Po
	-rm -f ./$(DEPDIR)/s_shiftRightJam64.Po
	-rm -f ./$(DEPDIR)/s_shiftRightJam64Extra.Po
	-rm -f ./$(DEPDIR)/s_shortShiftLeft128.Po
	-rm -f ./$(DEPDIR)/s_shortShiftRight128.Po
	-rm -f ./$(DEPDIR)/s_shortShiftRightJam128.Po
	-rm -f ./$(DEPDIR)/s_shortShiftRightJam128Extra.Po
	-rm -f ./$(DEPDIR)/s_shortShiftRightJam64.Po
	-rm -f ./$(DEPDIR)/s_shortShiftRightJam64Extra.Po
	-rm -f ./$(DEPDIR)/s_sub128.Po
	-rm -f ./$(DEPDIR)/s_sub256M.Po
	-rm -f ./$(DEPDIR)/s_subMagsExtF80.Po
	-rm -f ./$(DEPDIR)/s_subMagsF128.Po
	-rm -f ./$(DEPDIR)/s_subMagsF32.Po
	-rm -f ./$(DEPDIR)/s_subMagsF64.Po
	-rm -f ./$(DEPDIR)/softfloat_raiseFlags.Po
	-rm -f ./$(DEPDIR)/softfloat_state.Po
	-rm -f ./$(DEPDIR)/ui32_to_extF80.Po
	-rm -f ./$(DEPDIR)/ui32_to_extF80M.Po
	-rm -f ./$(DEPDIR)/ui32_to_f128.Po
	-rm -f ./$(DEPDIR)/ui32_to_f128M.Po
	-rm -f ./$(DEPDIR)/ui32_to_f32.Po
	-rm -f ./$(DEPDIR)/ui32_to_f64.Po
	-rm -f ./$(DEPDIR)/ui64_to_extF80.Po
	-rm -f ./$(DEPDIR)/ui64_to_extF80M.Po
	-rm -f ./$(DEPDIR)/ui64_to_f128.Po
	-rm -f ./$(DEPDIR)/ui64_to_f128M.Po
	-rm -f ./$(DEPDIR)/ui64_to_f32.Po
	-rm -f ./$(DEPDIR)/ui64_to_f64.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-includeHEADERS uninstall-libLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles am--refresh check \
	check-am clean clean-cscope clean-generic clean-libLIBRARIES \
	clean-libtool cscope cscopelist-am ctags ctags-am dist \
	dist-all dist-bzip2 dist-gzip dist-lzip dist-shar dist-tarZ \
	dist-xz dist-zip dist-zstd distcheck distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distcleancheck distdir distuninstallcheck dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-includeHEADERS install-info install-info-am \
	install-libLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-includeHEADERS \
	uninstall-libLIBRARIES

.PRECIOUS: Makefile


# I want the version of softfloat.h that is installed to capture all the
# options used to build this version.

softfloat_types.h:	platform.h $(srcdir)/include/softfloat_types.h
	cat platform.h $(srcdir)/include/softfloat_types.h > softfloat_types.h

# end of Makefile.am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
