% "csl/new-embedded/for-emscripten/package.map"

%**************************************************************************
%* Copyright (C) 2022, the REDUCE developers                              *
%*                                                                        *
%* Redistribution and use in source and binary forms, with or without     *
%* modification, are permitted provided that the following conditions are *
%* met:                                                                   *
%*                                                                        *
%*     * Redistributions of source code must retain the relevant          *
%*       copyright notice, this list of conditions and the following      *
%*       disclaimer.                                                      *
%*     * Redistributions in binary form must reproduce the above          *
%*       copyright notice, this list of conditions and the following      *
%*       disclaimer in the documentation and/or other materials provided  *
%*       with the distribution.                                           *
%*                                                                        *
%* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS    *
%* "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT      *
%* LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS      *
%* FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE         *
%* COPYRIGHT OWNERS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,   *
%* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,   *
%* BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS  *
%* OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND *
%* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR  *
%* TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF     *
%* THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH   *
%* DAMAGE.                                                                *
%**************************************************************************

% $Id$

% This file is a copy of "packages/package.map" that is used to build
% the mobile version of Web REDUCE, based on the code in
% "csl/new-embedded/minireduce-image".  It has a number of lines
% commented out in order to build a mini-REDUCE containing only the
% more mainstream packages, which leads to a smaller image file.
% Beware that this file must be kept synchronized with
% "packages/package.map"!

(
 (support       "support"     core                               psl)
 (revision      "support"     core                           csl psl)
 (rlisp         "rlisp"       core                           csl psl)
 (alg           "alg"         core      test                 csl psl)
 (poly          "poly"        core      test                 csl psl)
 (rtools        "rtools"      core                           csl psl)
 (polydiv       "poly"        core      test                 csl psl)
 (arith         "arith"       core      test                 csl psl)
 (mathpr        "mathpr"      core                           csl psl)
 (ezgcd         "factor"      core                           csl psl)
 (factor        "factor"      core      test                 csl psl)
%(hephys        "hephys"      core                           csl psl)
 (int           "int"         core      test                 csl psl)
 (matrix        "matrix"      core      test                 csl psl)
%(rlisp88       "rlisp88"     core                           csl psl)
%(rprint        "rprint"      core                           csl psl)
%(fmprint       "rprint"      core                           csl psl)
%(pretty        "rtools"      core                           csl psl)
 (solve         "solve"       core      test                 csl psl)
%(desir         "solve"       core      test                 csl psl)
 (ineq          "solve"       core      test                 csl psl)
%(modsr         "solve"       core      test                 csl psl)
%(rsolve        "solve"       core      test                 csl psl)
 (algint        "algint"      core      test                 csl psl)
%(arnum         "arnum"       core      test                 csl psl)
%(assist        "assist"      core      test                 csl psl)
%(dummy         "assist"      core      test                 csl psl)
%(cantens       "assist"      core      test                 csl psl)
%(atensor       "atensor"     core      test                 csl psl)
 (avector       "avector"     core      test                 csl psl)
%(invbase       "invbase"     core      test                 csl psl)
%(misc          "misc"        core                           csl psl)
%(boolean       "misc"        core      test                 csl psl)
%(cedit         "misc"        core                           csl psl)
%(rcref         "misc"        core                           csl psl)
%(ftr           "misc"        core                           csl psl)
%(reset         "misc"        core                           csl psl)
%(cali          "cali"        core      test                 csl psl)
%(camal         "camal"       core      test                 csl psl)
%(changevr      "misc"        core      test                 csl psl)
%(compact       "misc"        core      test                 csl psl)
%(dfpart        "misc"        core      test                 csl psl)
%(lie           "misc"        core      test                 csl psl)
%(assert        "assert"                                     csl psl)
 (odesolve      "odesolve"    noncore   test                 csl psl)
%(pf            "misc"                  test                 csl psl)
 (trigd         "misc/trigd"            test                 csl psl)
%(cvit          "hephys"                test                 csl psl)
%(noncom2       "hephys"                                     csl psl)
%(physop        "hephys"                test                 csl psl)
%(excalc        "excalc"                test                 csl psl)
%(gentran       "gentran"               test                 csl psl)
%(fide1         "fide"                                       csl psl)
%(fide          "fide"                  test                 csl psl)
%(numeric       "numeric"               test                 csl psl)
%(randpoly      "misc"                  test                 csl psl)
%(reacteqn      "misc"                  test                 csl psl)
%(roots         "roots"                 test                 csl psl)
%(rlfi          "misc"                  test                 csl psl)
%(roots2        "roots"                                      csl psl)
 (sets          "misc"                  test                 csl psl)
%(xideal        "xideal"                test                 csl psl)
%(eds           "eds"                   test                 csl psl)
%(dipoly        "dipoly"                                     csl psl)
%(groebner      "groebner"              test                 csl psl)
%(groebnr2      "groebner"                                   csl psl)
%(ideals        "groebner"              test                 csl psl)
 (linalg        "linalg"                test                 csl psl)
%(ncpoly        "ncpoly"                test                 csl psl)
%(normform      "normform"              test                 csl psl)
%(orthovec      "orthovec"              test                 csl psl)
%(plot          "plot"                                       csl psl)
%(gnuplot       "plot"                                       csl psl)
%(laplace       "laplace"               test                 csl psl)
%(pm            "pm"                    test                 csl psl)
%(qsum          "qsum"                  test                 csl psl)
%(scope         "scope"                 test                 csl psl)
%(sparse        "sparse"                test                 csl psl)
%(spde          "spde"                  test                 csl psl)
%(ellipfn       "ellipfn"               test                 csl psl)
 (specfn        "specfn"                test                 csl psl)
 (specfn2       "specfn"                test                 csl psl)
 (specfaux      "specfn"                                     csl psl)
 (specbess      "specfn"                                     csl psl)
 (sfgamma       "specfn"                                     csl psl)
 (tps           "tps"                   test                 csl psl)
 (limits        "misc"                  test                 csl psl)
 (defint        "defint"                test                 csl psl)
%(fps           "specfn"                test                 csl psl)
%(trigint       "trigint"               test                 csl psl)
%(ratint        "ratint"                test                 csl psl)
%(mathml        "mathml"                test                 csl psl)
%(mathmlom      "mathml"                test                 csl psl)
%(rlsupport     "redlog/rlsupport" 			     csl psl)
%(rltools       "redlog/rltools"        test                 csl psl)
%(redlog        "redlog/rl"             test                 csl psl)
%(cgb           "cgb"                   test                 csl psl)
%(cl            "redlog/cl"                                  csl psl)
%(ofsf          "redlog/ofsf"           test                 csl psl)
%(dvfsf         "redlog/dvfsf"                               csl psl)
%(acfsf         "redlog/acfsf"          test                 csl psl)
%(dcfsf         "redlog/dcfsf"                               csl psl)
%(ibalp         "redlog/ibalp"          test                 csl psl)
%(pasf          "redlog/pasf"           test                 csl psl)
%(qqe           "redlog/qqe"                                 csl psl)
%(qqe_ofsf      "redlog/qqe_ofsf"       test                 csl psl)
%(mri           "redlog/mri"            test                 csl psl)
%(mri_ofsf      "redlog/mri"                                 csl psl)
%(mri_pasf      "redlog/mri"                                 csl psl)
%(redfront      "redfront"                                   csl psl)
%(reduce4       "reduce4"                                    csl psl)
%(tables        "reduce4"                                    csl psl)
%(talp          "redlog/talp"           test                 csl psl)
 (sum           "sum"                   test                 csl psl)
%(zeilberg      "sum"                   test                 csl psl)
%(symaux        "symmetry"                                   csl psl)
%(symmetry      "symmetry"              test                 csl psl)
%(taylor        "taylor"                test                 csl psl)
%(mrvlimit      "mrvlimit"              test                 csl psl)
%(residue       "residue"               test                 csl psl)
%(susy2         "susy2"                 test                 csl psl)
%(tri           "tri"                   test                 csl psl)
%(trigsimp      "trigsimp"              test                 csl psl)
%(crack         "crack"                 test                 csl psl)
%(liepde        "crack"                 test                 csl psl)
%(applysym      "crack"                 test                 csl psl)
%(conlaw        "crack"                 test                 csl psl)
%(v3tools       "crack"                                      csl psl)
%(xcolor        "xcolor"                test                 csl psl)
%(wu            "wu"                    test                 csl psl)
%(ztrans        "ztrans"                test                 csl psl)
%(geoprover     "geometry"              test                 csl psl)
%(rataprx       "rataprx"               test                 csl psl)
%(rtrace        "rtrace"                                     csl psl)
 (tmprint       "tmprint"                                    csl psl)
%(libreduce     "libreduce"                                  csl psl)
%(utf8          "utf8"                                       csl psl)
%(lpdo          "lpdo"                  test                 csl psl)
%(guardian      "guardian"              test                 csl psl)
%(breduce       "breduce"                                    csl psl)
%(cdiff         "cdiff"                 test                 csl psl)
%(bibasis       "bibasis"               test                 csl psl)
%(clprl         "clprl"                 test                 csl psl)
%(gcref         "gcref"                 test                 csl psl)
%(turtle        "plot"                                       csl psl)
%(profile       "profile"                                    csl psl)
%(pident        "pident"                                     csl psl)
%(pgauss        "pgauss"                                     csl psl)
%(qhull         "qhull"                                      csl psl)
%(smt           "redlog/smt"            test                 csl psl)
%(gurobi        "foreign/gurobi"                             csl)
%(z3            "foreign/z3"                                 csl)
%(cuba          "foreign/cuba"                               csl)
%(nlopt         "foreign/nlopt"                              csl)
%(rubi_red      "rubi_red"                                   csl psl)
%(lalr          "lalr"                  test                 csl psl)
%(ranum         "ranum"                 test                 csl psl)
%(listvecops    "listvecops"            test                 csl psl)
%(cde           "cde"                   test                 csl psl)
%(sstools       "sstools"               test                 csl psl)
%(coeff2        "misc"                                       csl psl)
%(heugcd        "heugcd"               test                 csl psl)
)

% End of package.map
