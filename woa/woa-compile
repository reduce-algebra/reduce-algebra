#! /bin/bash

# This script will keep the llvm-mingw files in a directory
# just below $base. If MINGWHOME is set that indicated where this
# should be otherwise the current user's home directory will be used

base="${MINGWHOME:-$HOME}"

# Both of the following lines may deserve to be updated as new releases
# or snapshots of the software become available.

WEBSRC="https://github.com/mstorsjo/llvm-mingw/releases/download/20250613"
MINGW="llvm-mingw-20250613-ucrt-aarch64"

# If I have not yet downloaded the compiler do so now.

if ! test -d "$base/$MINGW"
then
  mkdir -p "$base"
  here=`pwd`
  cd $base
# If these lines get executed they generate quite a few lines of
# noise that shows what they are doing - but they ought only to
# be activated once.
  curl $WEBSRC/$MINGW.zip -L -o $MINGW.zip
  unzip $MINGW.zip
  cd "$here"
fi

GCC=${1}
if test "$GCC" = ""
then
  exit
fi

shift

#PATH=$MINGW/bin:$MINGW/python/bin:\
#$MINGW/python/lib/python3.12/venv/scripts/nt:\
#$MINGW/aarch64-w64-mingw32/bin:$PATH

# Now for compatibility there is a nasty! I want to map and option
#        -o name
# onto   -o name.exe
#
# Well if an option "-c" or "-S" or "-E" is provided then any output file
# specified bu "-o" should not get ".exe" added. But those options might
# be specified after the "-o"... I cope with this my migrating any "-o"
# to become the final argument (and I only keep a single "-o" so if
# two or more are specified only the last one survives"

ARGS=""
DEST=""
EXENEEDED="yes"
EXEADDED="no"
while test $# != 0
do
  case $1 in
  -o)
    shift
    DEST=$1
    ;;
  -o*)
    DEST=${1#-o}
    ;;
  -c | -S | -E)
    EXENEEDED="no"
    ARGS="$ARGS $1"
    ;;
  *)
    ARGS="$ARGS $1"
    ;;
  esac
  shift
done

# Now if an option "-o" was given add it to the end. Unless we had
# -c, -S or -E stick ".exe" on the end of the destination if it is
# not there already.

if test "$DEST" != ""
then
  if test "$EXENEEDED" = "yes"
  then
    case $DEST in
    *.exe)
      ;;
    *)
      DEST=$DEST.exe
      ;;
    esac
# If I am creating an executable file I will enure that some crucial
# library files it will depend on are placed adjacent to it.
    if test "$DEST" != ""
    then
      DESTDIR=`dirname $DEST`
      cp "$base/$MINGW/aarch64-w64-mingw32"/bin/*.dll $DESTDIR
    fi
  fi
  ARGS="$ARGS -o $DEST"
fi

# At last I can actually do the compilation.

"$base/$MINGW/bin/$GCC.exe" $ARGS

# The compiler seems not to leave the resulting binary tagged as
# executable, so fix that up here. Also I make a symbolic link from
# the file xxx.exe to just xxx.

if test "$DEST" != "" && test "$EXENEEDED" = "yes"
then
  /usr/bin/chmod +x $DEST
  ln -s $DEST ${DEST%.exe}
fi

# end of woa-compile
