% Tests of work over GF(2)

load_package gf2;



on echo;


lisp if !*csl then force!-output!-radix 16
      else if !*psl then outputbase!* := 16$



operator vv;


gf2_vars {x, y, z};


d := prefix_to_gf2 (x^2*y + y^2 + z);


d := !*gf2(((0 . 3) (1 . 2) (2 . 1)), ((0 . 2) (2 . 2)), ((0 . 1) (3 . 1)))

%   ( ((0 . 3) (1 . 2) (2 . 1))
%     ((0 . 2) (2 . 2))
%     ((0 . 1) (3 . 1)) )

gf2_to_prefix d;


 2      2
x *y + y  + z


off gf2_sparse;



% For this test I will set the width of each field to just 4 bits. This
% then uses just one hex digit per exponent.
lisp (gf2_degree_bits := 3);


3


gf2_vars {x, y, z};


d := prefix_to_gf2 (x^2*y + y^2 + z);


d := !*gf2(3210, 2020, 1001)

%   ( 0x003002001000  0x002000002000 0x001000000001)
%       tot  x  y  z    tot  x  y  z   tot  x  y  z
% Except that here it will be (0x3210 0x2020 0x1001) because of the
% narrow fields.

gf2_to_prefix d;


 2      2
x *y + y  + z


on gf2_sparse;



% I (ACN) do not know any really sensible examples to try here, so here
% are some starting points and maybe somebody who knows what they are doing
% can replace these with something better.

gf2_vars {x, y};


gf2_groeb{x^2 + y,
          x^3 + x};

Add in a new base polynomial (plus (times x y) x)
Add in a new base polynomial (plus (expt x 2) (expt y 2))

  2    2
{x  + y ,

 x*(y + 1),

  2
 x  + y,

     2
 x*(x  + 1)}


gf2_vars {p, s, b, z, t, w};



gf2_groeb{p + s + b,
          p + t + s,
          w + p*s + b**2,
          w + p*t,
          w*p + *b**3,
          w + b*s + b**2};

Add in a new base polynomial (plus (times b p) (times b s) (times p t) (times s
t))
Add in a new base polynomial (plus (times b p) (times b s) (times p s) w)
Add in a new base polynomial (plus (times b w) (times (expt p 2) t) (times p s t
))
Add in a new base polynomial (plus (times b p s) (times b w) (times p w))
Add in a new base polynomial (plus (times b p) w)
Add in a new base polynomial (plus (times (expt p 2) w) (times p s w) (expt w 2)
)
Add in a new base polynomial (plus (times b p (expt s 2) w) (times b s (expt w 2
)) (times (expt p 3) s w))
Add in a new base polynomial (plus (times b p s w) (times b (expt w 2)) (times (
expt p 3) w) (times (expt p 2) s w))

***** too many steps - giving up 
Inside: gf2_reduce_by_one_poly
Arg 1: (((0 . 5) (1 . 3) (2 . 1) (6 . 1)) ((0 . 5) (1 . 2) (2 . 1) (3 . 1) (6 . 
1)) ((0 . 5) (1 . 1) (2 . 1) (3 . 2) (6 . 1)) ((0 . 4) (3 . 2) (6 . 2)) ((0 . 4)
 (1 . 1) (3 . 1) (6 . 2)))
Arg 2: (((0 . 4) (1 . 2) (2 . 1) (6 . 1)) ((0 . 4) (1 . 3) (6 . 1)) ((0 . 4) (1
 . 1) (2 . 1) (3 . 1) (6 . 1)) ((0 . 3) (3 . 1) (6 . 2)))
Inside: gf2_reduce
Arg 1: (((0 . 5) (1 . 3) (2 . 1) (6 . 1)) ((0 . 5) (1 . 1) (2 . 1) (3 . 2) (6 . 
1)) ((0 . 4) (3 . 2) (6 . 2)) ((0 . 4) (1 . 2) (6 . 2)))
Arg 2: ((((0 . 4) (1 . 2) (2 . 1) (6 . 1)) ((0 . 4) (1 . 3) (6 . 1)) ((0 . 4) (1
 . 1) (2 . 1) (3 . 1) (6 . 1)) ((0 . 3) (3 . 1) (6 . 2))) (((0 . 5) (1 . 3) (2
 . 1) (6 . 1)) ((0 . 5) (1 . 1) (2 . 2) (3 . 1) (6 . 1)) ((0 . 4) (2 . 1) (3 . 1
) (6 . 2))) (((0 . 3) (1 . 2) (6 . 1)) ((0 . 3) (1 . 1) (2 . 1) (6 . 1)) ((0 . 2
) (6 . 2))) (((0 . 2) (1 . 1) (3 . 1)) ((0 . 1) (6 . 1))) (((0 . 3) (1 . 1) (2
 . 1) (3 . 1)) ((0 . 2) (3 . 1) (6 . 1)) ((0 . 2) (1 . 1) (6 . 1))) (((0 . 3) (1
 . 1) (2 . 1) (5 . 1)) ((0 . 3) (1 . 2) (5 . 1)) ((0 . 2) (3 . 1) (6 . 1))) (((0
 . 2) (2 . 1) (3 . 1)) ((0 . 2) (1 . 1) (3 . 1)) ((0 . 2) (1 . 1) (2 . 1)) ((0
 . 1) (6 . 1))) (((0 . 2) (2 . 1) (5 . 1)) ((0 . 2) (2 . 1) (3 . 1)) ((0 . 2) (1
 . 1) (5 . 1)) ((0 . 2) (1 . 1) (3 . 1))) (((0 . 1) (3 . 1)) ((0 . 1) (2 . 1)) (
(0 . 1) (1 . 1))) (((0 . 1) (5 . 1)) ((0 . 1) (2 . 1)) ((0 . 1) (1 . 1))) (((0
 . 2) (3 . 2)) ((0 . 2) (1 . 1) (2 . 1)) ((0 . 1) (6 . 1))) (((0 . 2) (1 . 1) (5
 . 1)) ((0 . 1) (6 . 1))) (((0 . 3) (3 . 3)) ((0 . 2) (1 . 1) (6 . 1))) (((0 . 2
) (3 . 2)) ((0 . 2) (2 . 1) (3 . 1)) ((0 . 1) (6 . 1))))
Inside: gf2_s
Arg1: (((0 . 3) (1 . 2) (6 . 1)) ((0 . 3) (1 . 1) (2 . 1) (6 . 1)) ((0 . 2) (6
 . 2)))
Arg2: (((0 . 2) (3 . 2)) ((0 . 2) (1 . 1) (2 . 1)) ((0 . 1) (6 . 1)))
Arg3: ((((0 . 4) (1 . 2) (2 . 1) (6 . 1)) ((0 . 4) (1 . 3) (6 . 1)) ((0 . 4) (1
 . 1) (2 . 1) (3 . 1) (6 . 1)) ((0 . 3) (3 . 1) (6 . 2))) (((0 . 5) (1 . 3) (2
 . 1) (6 . 1)) ((0 . 5) (1 . 1) (2 . 2) (3 . 1) (6 . 1)) ((0 . 4) (2 . 1) (3 . 1
) (6 . 2))) (((0 . 3) (1 . 2) (6 . 1)) ((0 . 3) (1 . 1) (2 . 1) (6 . 1)) ((0 . 2
) (6 . 2))) (((0 . 2) (1 . 1) (3 . 1)) ((0 . 1) (6 . 1))) (((0 . 3) (1 . 1) (2
 . 1) (3 . 1)) ((0 . 2) (3 . 1) (6 . 1)) ((0 . 2) (1 . 1) (6 . 1))) (((0 . 3) (1
 . 1) (2 . 1) (5 . 1)) ((0 . 3) (1 . 2) (5 . 1)) ((0 . 2) (3 . 1) (6 . 1))) (((0
 . 2) (2 . 1) (3 . 1)) ((0 . 2) (1 . 1) (3 . 1)) ((0 . 2) (1 . 1) (2 . 1)) ((0
 . 1) (6 . 1))) (((0 . 2) (2 . 1) (5 . 1)) ((0 . 2) (2 . 1) (3 . 1)) ((0 . 2) (1
 . 1) (5 . 1)) ((0 . 2) (1 . 1) (3 . 1))) (((0 . 1) (3 . 1)) ((0 . 1) (2 . 1)) (
(0 . 1) (1 . 1))) (((0 . 1) (5 . 1)) ((0 . 1) (2 . 1)) ((0 . 1) (1 . 1))) (((0
 . 2) (3 . 2)) ((0 . 2) (1 . 1) (2 . 1)) ((0 . 1) (6 . 1))) (((0 . 2) (1 . 1) (5
 . 1)) ((0 . 1) (6 . 1))) (((0 . 3) (3 . 3)) ((0 . 2) (1 . 1) (6 . 1))) (((0 . 2
) (3 . 2)) ((0 . 2) (2 . 1) (3 . 1)) ((0 . 1) (6 . 1))))
Inside: gf2_expand_base
Arg1: ((((0 . 1) (3 . 1)) ((0 . 1) (2 . 1)) ((0 . 1) (1 . 1))) (((0 . 1) (5 . 1)
) ((0 . 1) (2 . 1)) ((0 . 1) (1 . 1))) (((0 . 2) (3 . 2)) ((0 . 2) (1 . 1) (2 . 
1)) ((0 . 1) (6 . 1))) (((0 . 2) (1 . 1) (5 . 1)) ((0 . 1) (6 . 1))) (((0 . 3) (
3 . 3)) ((0 . 2) (1 . 1) (6 . 1))) (((0 . 2) (3 . 2)) ((0 . 2) (2 . 1) (3 . 1)) 
((0 . 1) (6 . 1))))
Inside: gf2_groeb
Arg1: (list (plus b p s) (plus p s t) (plus (expt b 2) (times p s) w) (plus (
times p t) w) (plus (expt b 3) (times p w)) (plus (expt b 2) (times b s) w))
Inside: errorset
Inside: errorset


end;

