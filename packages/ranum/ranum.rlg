on ranum;



f := (x**2-2)*x*(x-5);


         3      2
f := x*(x  - 5*x  - 2*x + 10)


rl := isolate f;


            2                   2
rl := { - (x  - 2, ]0.25, 4[),(x  - 2, ]0, 3.5[),0,5}


for each r in rl collect sub(x=r, f);


{0,0,0,0}


r1 := refine(part(rl, 1), 10);


           2
r1 :=  - (x  - 2, ]1.41088867188, 1.41455078125[)


on rarat;



r1;


     2        5779    2897
 - (x  - 2, ]------, ------[)
              4096    2048


refine(r1, 100);


     2        7343016637207168931428032607349389
 - (x  - 2, ]------------------------------------, 
              5192296858534827628530496329220096

 1835754159301792232857008151837351
------------------------------------[)
 1298074214633706907132624082305024


off rarat;



x1 := ra(f, 1, 2);


        2
x1 := (x  - 2, ]1, 2[)


off nat;



x1;


ranum(x**2 - 2, 1, 2)$


on nat;



x2 := ra(f, 4, 10);


x2 := (x - 5, ]4, 6[)


isolate f;


      2                   2
{ - (x  - 2, ]0.25, 4[),(x  - 2, ]0, 3.5[),0,5}


x1-3;


     2
 - (x  - 6*x + 7, ]0, 3[)


x1+1/7;


     2
(49*x  - 14*x - 97, ]1, 2.28571428571[)


x1/5;


     2
(25*x  - 2, ]0, 0.8[)


-x1;


     2
 - (x  - 2, ]1, 2[)


x1 + x2;


  2
(x  - 10*x + 23, ]5, 8[)


1/x1;


    2
(2*x  - 1, ]0, 2[)


x1 - x2;


     2
 - (x  - 10*x + 23, ]2, 5[)


x1 * x2;


  2
(x  - 50, ]4, 12[)


x1^4;


(x - 4, ]3, 5[)


x1**10 - (x1*x1*x1*x1*x1*x1*x1*x1*x1*x1);


0


wilk := 8388608*x**20 + 1761607681*x**19 + 172931153920*x**18 +
10543221964800*x**17 + 447347234439168*x**16 +
14028108264898560*x**15 + 336985244869591040*x**14 +
6342720331186176000*x**13 + 94877480085669019648*x**12 +
1137370949952460554240 *x**11 + 10968398649699241820160*x**10 +
85079777790228273561600*x**9 + 528740774622641958944768 *x**8 +
2611655889692786813829120*x**7 + 10122095419974470210682880*x**6 +
30198816984091441338777600*x**5 + 67426052557934862488567808*x**4 +
107969196810523545855590400*x**3 + 115794329499468438700032000 *x**2 +
73425049924762651852800000*x + 20408661249006627717120000$



sub(x=x1, wilk);


  2
(x  - 1222990500795355262640717824*x

 - 99630592940082469139737032650173160997097514205184, ]1.2230719601e+27, 

1.2230719601e+27[)


sub(x=x2, wilk);


1084312172159722149684071928125


isolatingivl wilk;


   -1702887425   -5041553411
{{-------------,-------------},
    67108864      268435456

   -1635778561   -4773117955
 {-------------,-------------},
    134217728     536870912

   -4773117955   -7776239621
 {-------------,-------------},
    536870912    1073741824

   -7776239621   -13782482953
 {-------------,--------------},
   1073741824     2147483648

   -13782482953   -1501560833
 {--------------,-------------},
    2147483648     268435456

   -1501560833   -10242490375
 {-------------,--------------},
    268435456     2147483648

   -10242490375   -4236247043
 {--------------,-------------},
    2147483648    1073741824

   -4236247043   -1233125377
 {-------------,-------------},
   1073741824     536870912

   -1233125377   -3162505219
 {-------------,-------------},
    536870912    2147483648

   -3162505219   -696254465
 {-------------,------------}}
   2147483648    1073741824


on rahidepoly;



wrl := isolate wilk;


wrl := { - ]18.7812500112, 25.3750000149[,

         - ]8.89062500559, 12.1875000075[,

         - ]7.24218750466, 8.89062500559[,

         - ]6.41796875419, 7.24218750466[,

         - ]5.59375000373, 6.41796875419[,

         - ]4.76953125326, 5.59375000373[,

         - ]3.94531250279, 4.76953125326[,

         - ]2.29687500186, 3.94531250279[,

         - ]1.4726562514, 2.29687500186[,

         - ]0.648437500931, 1.4726562514[}


for each x in wrl collect refine(x, 10);


{ - ]20.8417968873, 20.8482360963[,

  - ]8.91638184154, 8.91960144603[,

  - ]8.00684357198, 8.00845337423[,

  - ]6.99910736536, 6.99991226648[,

  - ]5.99942016997, 6.00022507109[,

  - ]4.99973297458, 5.0005378757[,

  - ]3.99924087807, 4.00004577919[,

  - ]2.99874878156, 3.0003585838[,

  - ]1.99986648729, 2.00067138841[,

  - ]0.999374390778, 1.0001792919[}


off rahidepoly;



on errcont;



symbolic ra_wrappertest(6, 42);


48


symbolic ra_wrappertest(7, 42);


***** x=7 

*** caught error - restoring domain mode ranum 


off msg;



ra(f, 1, 10);


***** polynomial has more than one zero on specified interval 


ra(f, 1/2, 1);


***** polynomial has no zero on specified interval 


ra(f, 1, 5);


***** polynomial has a zero at the upper bound of the specified interval 


ra(f, 5, 10);


***** polynomial has a zero at the lower bound of the specified interval 


on msg;



off errcont;



end;

Tested on x86_64-pc-windows CSL
1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 
Time: ranum  391  0
1: Leaving REDUCE ... 


End of Lisp run after 0.43+0.00 seconds
