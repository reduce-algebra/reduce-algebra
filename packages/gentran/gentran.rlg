matrix m(3,3)$


m(1,1) := 18*cos(q3)*cos(q2)*m30*p**2 - 9*sin(q3)**2*p**2*m30
	  - sin(q3)**2*j30y + sin(q3)**2*j30z + p**2*m10
	  + 18*p**2*m30 + j10y + j30y;


                                  2          2               2
m(1,1) := 18*cos(q2)*cos(q3)*m30*p  - sin(q3) *j30y + sin(q3) *j30z

                      2      2                      2           2
           - 9*sin(q3) *m30*p  + j10y + j30y + m10*p  + 18*m30*p

m(2,1) :=
m(1,2) := 9*cos(q3)*cos(q2)*m30*p**2 - sin(q3)**2*j30y +
	  sin(q3)**2*j30z - 9*sin(q3)**2*m30*p**2 + j30y +
	  9*m30*p**2;


                                           2          2               2
m(2,1) := m(1,2) := 9*cos(q2)*cos(q3)*m30*p  - sin(q3) *j30y + sin(q3) *j30z

            2      2                 2
 - 9*sin(q3) *m30*p  + j30y + 9*m30*p

m(3,1) :=
m(1,3) := -9*sin(q3)*sin(q2)*m30*p**2;


                                              2
m(3,1) := m(1,3) :=  - 9*sin(q2)*sin(q3)*m30*p

m(2,2) := -sin(q3)**2*j30y + sin(q3)**2*j30z - 9*sin(q3)**2
	   *m30*p**2 + j30y + 9*m30*p**2;


                    2               2                 2      2                 2
m(2,2) :=  - sin(q3) *j30y + sin(q3) *j30z - 9*sin(q3) *m30*p  + j30y + 9*m30*p

m(3,2) :=
m(2,3) := 0;


m(3,2) := m(2,3) := 0

m(3,3) := 9*m30*p**2 + j30x;


                        2
m(3,3) := j30x + 9*m30*p


gentranlang!* := 'fortran$


fortlinelen!* := 72$



gentran literal "C", cr!*,
		"C", tab!*, "*** COMPUTE VALUES FOR MATRIX M ***", cr!*,
		"C", cr!*$

c
c     *** compute values for matrix m ***
c


for j:=1:3 do
    for k:=j:3 do
	 gentran m(j,k) ::=: m(j,k)$

      m(1,1)=18.0*cos(real(q2))*cos(real(q3))*m30*p**2-(sin(real(q3))**2
     . *j30y)+sin(real(q3))**2*j30z-(9.0*sin(real(q3))**2*m30*p**2)+j10y
     . +j30y+m10*p**2+18.0*m30*p**2
      m(1,2)=9.0*cos(real(q2))*cos(real(q3))*m30*p**2-(sin(real(q3))**2*
     . j30y)+sin(real(q3))**2*j30z-(9.0*sin(real(q3))**2*m30*p**2)+j30y+
     . 9.0*m30*p**2
      m(1,3)=-(9.0*sin(real(q2))*sin(real(q3))*m30*p**2)
      m(2,2)=-(sin(real(q3))**2*j30y)+sin(real(q3))**2*j30z-(9.0*sin(
     . real(q3))**2*m30*p**2)+j30y+9.0*m30*p**2
      m(2,3)=0.0
      m(3,3)=j30x+9.0*m30*p**2


gentran literal "C", cr!*,
		"C", tab!*, "*** COMPUTE VALUES FOR INVERSE MATRIX ***",
		     cr!*,
		"C", cr!*$

c
c     *** compute values for inverse matrix ***
c


share var$


for j:=1:3 do
    for k:=j:3 do
	if m(j,k) neq 0 then
	<<
	    var := tempvar nil;
	    markvar var;
	    m(j,k) := var;
	    m(k,j) := var;
	    gentran
		eval(var) := m(eval(j),eval(k))
        >>$

      t0=m(1,1)
      t1=m(1,2)
      t2=m(1,3)
      t3=m(2,2)
      t4=m(3,3)


COMMENT -- Contents of Matrix M: --$

m := m;


     [t0  t1  t2]
     [          ]
m := [t1  t3  0 ]
     [          ]
     [t2  0   t4]



matrix mxinv(3,3)$


mxinv := m**(-1)$



for j:=1:3 do
    for k:=j:3 do
	gentran mxinv(j,k) ::=: mxinv(j,k)$

      mxinv(1,1)=(t3*t4)/(t0*t3*t4-(t1**2*t4)-(t2**2*t3))
      mxinv(1,2)=-(t1*t4)/(t0*t3*t4-(t1**2*t4)-(t2**2*t3))
      mxinv(1,3)=-(t2*t3)/(t0*t3*t4-(t1**2*t4)-(t2**2*t3))
      mxinv(2,2)=(t0*t4-t2**2)/(t0*t3*t4-(t1**2*t4)-(t2**2*t3))
      mxinv(2,3)=(t1*t2)/(t0*t3*t4-(t1**2*t4)-(t2**2*t3))
      mxinv(3,3)=(t0*t3-t1**2)/(t0*t3*t4-(t1**2*t4)-(t2**2*t3))


gentran
   for j:=1:3 do
       for k:=j+1:3 do
       <<
	   m(k,j) := m(j,k);
	   mxinv(k,j) := mxinv(j,k)
        >>$

      do 25001 j=1,3
          do 25002 k=j+1,3
              m(k,j)=m(j,k)
              mxinv(k,j)=mxinv(j,k)
25002     continue
25001 continue


end$

Tested on x86_64-pc-windows CSL
1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 1: 
Time: gentran  16  0
1: Leaving REDUCE ... 


End of Lisp run after 0.07+0.00 seconds
